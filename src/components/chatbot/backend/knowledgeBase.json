[
  {
    "route": "d:\\Kushagra\\Programming\\IRIS MIT WPU\\I.R.I.S-nextjs\\pages\\about\\index",
    "content": "import React, { useEffect } from 'react'; import styles from './About.module.css'; import Image from 'next/image'; function About() { useEffect(() => { const hash = window.location.hash; if (hash) { const element = document.querySelector(hash); if (element) { element.scrollIntoView({ behavior: 'smooth' }); } } }, []); const backgroundVideo = '/bgVid.webm'; return ( Your browser does not support the video tag. About I.R.I.S I.R.I.S (Innovation Research & Intelligence Support) is a tech club dedicated to fostering innovation and supporting research in the field of technology. Contact Information Email: iris@mitwpu.edu.in Phone: +91 7715958053 Address: MIT World Peace University, Survey No. 124, Paud Rd, Kothrud, Pune, Maharashtra 411038 Our Mission To provide a platform for tech enthusiasts to: Collaborate Learn Innovate Our Vision To be the leading tech community that drives technological advancements and shapes the future of innovation. Faculty Mentors Dr. Shamla Mantri Associate Professor View Profile Dr. Yogesh Kulkarni Assistant Professor View Profile Dr. Pratvina Talele Project Mentor View Profile Dr. Sumedha Sirsikar Project Mentor View Profile Team Members {[ { name: \"Durgesh Deore\", role: \"Founder\", imgSrc: \"/durgesh.jpg\", linkedIn: \"https://www.linkedin.com/in/durgesh-deore-74a75a281/\" }, { name: \"Kavish Jain\", role: \"Founder\", imgSrc: \"/kavish.jpeg\", linkedIn: \"https://www.linkedin.com/in/kavish-jain-38b812247/\" }, { name: \"Chinmay Huddar\", role: \"Founder\", imgSrc: \"/chinmay.jpg\", linkedIn: \"https://www.linkedin.com/in/chinmay-huddar-3536761ab/?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app\" }, { name: \"Dhyey Ladani\", role: \"Founder\", imgSrc: \"/dhyey.jpg\", linkedIn: \"https://www.linkedin.com/in/dhyey-ladani/\" }, { name: \"Taksh Dhabalia\", role: \"President\", imgSrc: \"/taksh.jpeg\", linkedIn: \"https://www.linkedin.com/in/taksh-dhabalia-2b6969202/\" }, { name: \"Namra Doshi\", role: \"Vice President\", imgSrc: \"/namra.jpeg\", linkedIn: \"https://www.linkedin.com/in/namra-doshi-445976249/\" }, { name: \"Kushagra Singh\", role: \"Technical Head\", imgSrc: \"/Kush.jpg\", linkedIn: \"https://www.linkedin.com/in/kushagra-anit-singh/\" }, { name: \"Brandon Cerejo\", role: \"Treasurer\", imgSrc: \"/Brandon.jpg\", linkedIn: \"https://www.linkedin.com/in/brandon-cerejo-921275247/\" }, { name: \"Samanyu Bhate\", role: \"Technical Head\", imgSrc: \"/samanyu.jpg\", linkedIn: \"https://www.linkedin.com/in/samanyu-bhate-17136b1ab/\" }, { name: \"Grishma Shinde\", role: \"General Secretary\", imgSrc: \"/grishma.jpg\", linkedIn: \"https://www.linkedin.com/in/grishma-shinde-835343294?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app\" }, { name: \"Kaustubha M\", role: \"Marketing Head\", imgSrc: \"/kawas.jpeg\", linkedIn: \"https://www.linkedin.com/in/kawas-nandan/\" }, { name: \"Surendra Rajawat\", role: \"Content Management Head\", imgSrc: \"/surendra.jpg\", linkedIn: \"https://www.linkedin.com/in/surendra-rajawat-b16807322/\" }, { name: \"Riya Kondawar\", role: \"Social Media Head\", imgSrc: \"/Riya.jpg\", linkedIn: \"https://www.linkedin.com/in/riyakondawar/\" }, { name: \"Richa Shukla\", role: \"Event Operation Head\", imgSrc: \"/Richa.jpg\", linkedIn: \"https://www.linkedin.com/in/richa-shukla-026516258/?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app\" }, { name: \"Manasee Ambhore\", role: \"Sponsorship Head\", imgSrc: \"/manasee.jpg\", linkedIn: \"https://www.linkedin.com/in/manasee-ambhore-87ab65287/\" }, { name: \"Rochana Deshpande\", role: \"Content Head\", imgSrc: \"/rochana.jpg\", linkedIn: \"https://www.linkedin.com/in/rochana-deshpande-79a40a2b2/\" }, { name: \"Aaryan Joshi\", role: \"Research Head\", imgSrc: \"/aaryan.jpg\", linkedIn: \"https://www.linkedin.com/in/aaryanjoshi/\" }, { name: \"Divyansh Pathak\", role: \"Website Team Member\", imgSrc: \"/divyansh.jpg\", linkedIn: \"https://www.linkedin.com/in/divyansh-pathak/\" }, { name: \"Siya Shaha\", role: \"Website Team Member\", imgSrc: \"/siya.jpg\", linkedIn: \"https://www.linkedin.com/in/siya-shaha-5bb3822b4/\" }, { name: \"Ayushi Kadam\", role: \"Website Team Member\", imgSrc: \"/ayushi.jpg\", linkedIn: \"https://www.linkedin.com/in/ayushi-kadam-8a404a2b2/\" }, { name: \"Anchal Munot\", role: \"Website Team Member\", imgSrc: \"/anchal.jpg\", linkedIn: \"https://www.linkedin.com/in/anchal-munot-1264662b2/\" }, { name: \"Lakshman Gopal\", role: \"Design Team Member\", imgSrc: \"/lakshman.jpg\", linkedIn: \"https://www.linkedin.com/in/lakshman-k-gopal/\" }, { name: \"Parth Ware\", role: \"Founder\", imgSrc: \"/Parth.jpg\", linkedIn: \"https://www.linkedin.com/in/parth-ware-48993324a?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app\" }, { name: \"Raghunandan Veer\", role: \"Founder\", imgSrc: \"/logo2.png\", linkedIn: \"https://www.linkedin.com/in/raghunandan-veer-31b724266/\" }, { name: \"Sarthak Patil\", role: \"Founder\", imgSrc: \"/sarthak.jpeg\", linkedIn: \"https://www.linkedin.com/in/sarthak-patil-aa453a219/\" }, ].map((member, index) => ( {member.name} {member.role} LinkedIn ))} ); } export default About;",
    "questions": [
      "Tell me about index",
      "What is on the index page",
      "index information"
    ]
  },
  {
    "route": "d:\\Kushagra\\Programming\\IRIS MIT WPU\\I.R.I.S-nextjs\\pages\\api\\contacts",
    "content": "import db from '../../src/utils/db'; import { corsMiddleware } from '../../lib/corsMiddleware'; const handler = async (req, res) => { if (req.method === 'POST') { try { const { name, email, phone, subject, message } = req.body; const query = 'INSERT INTO contacts (name, email, phone, subject, message) VALUES (?, ?, ?, ?, ?)'; db.query(query, [name, email, phone, subject, message], (err, result) => { if (err) { console.error('Error inserting data:', err); res.status(500).json({ success: false, error: 'Database error' }); } else { res.status(201).json({ success: true, message: 'Message received' }); } }); } catch (err) { console.error('Error handling request:', err); res.status(500).json({ success: false, error: 'Server error' }); } } else { res.setHeader('Allow', ['POST']); res.status(405).end(`Method ${req.method} Not Allowed`); } } export default corsMiddleware(handler);",
    "questions": [
      "Tell me about contacts",
      "What is on the contacts page",
      "contacts information"
    ]
  },
  {
    "route": "d:\\Kushagra\\Programming\\IRIS MIT WPU\\I.R.I.S-nextjs\\pages\\api\\event2",
    "content": "import db from '../../src/utils/db'; import { corsMiddleware } from '../../lib/corsMiddleware'; const handler = async (req, res) => { if (req.method === 'POST') { try { const { team_name, leader_name, leader_phone, leader_email, leader_prn, leader_branch, member2_name, member2_phone, member2_email, member2_prn, member2_branch, member3_name, member3_phone, member3_email, member3_prn, member3_branch, member4_name, member4_phone, member4_email, member4_prn, member4_branch, } = req.body; const query = ` INSERT INTO event2_registrations ( team_name, leader_name, leader_phone, leader_email, leader_prn, leader_branch, member2_name, member2_phone, member2_email, member2_prn, member2_branch, member3_name, member3_phone, member3_email, member3_prn, member3_branch, member4_name, member4_phone, member4_email, member4_prn, member4_branch ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) `; db.query(query, [ team_name, leader_name, leader_phone, leader_email, leader_prn, leader_branch, member2_name, member2_phone, member2_email, member2_prn, member2_branch, member3_name, member3_phone, member3_email, member3_prn, member3_branch, member4_name, member4_phone, member4_email, member4_prn, member4_branch, ], (err, result) => { if (err) { console.error('Error inserting data:', err); res.status(500).json({ success: false, error: 'Database error' }); } else { res.status(201).json({ success: true, message: 'Registration successful' }); } }); } catch (err) { console.error('Error handling request:', err); res.status(500).json({ success: false, error: 'Server error' }); } } else { res.setHeader('Allow', ['POST']); res.status(405).end(`Method ${req.method} Not Allowed`); } }; export default corsMiddleware(handler);",
    "questions": [
      "Tell me about event2",
      "What is on the event2 page",
      "event2 information"
    ]
  },
  {
    "route": "d:\\Kushagra\\Programming\\IRIS MIT WPU\\I.R.I.S-nextjs\\pages\\api\\getkey",
    "content": "import { corsMiddleware } from '../../lib/corsMiddleware'; const handler = (req, res) => { res.status(200).json({ key: process.env.RAZORPAY_API_KEY }); }; export default corsMiddleware(handler);",
    "questions": [
      "Tell me about getkey",
      "What is on the getkey page",
      "getkey information"
    ]
  },
  {
    "route": "d:\\Kushagra\\Programming\\IRIS MIT WPU\\I.R.I.S-nextjs\\pages\\api\\home",
    "content": "import { corsMiddleware } from '../../lib/corsMiddleware'; const handler = (req, res) => { res.status(200).json({ message: 'Welcome to the home page!' }); }; export default corsMiddleware(handler);",
    "questions": [
      "Tell me about home",
      "What is on the home page",
      "home information"
    ]
  },
  {
    "route": "d:\\Kushagra\\Programming\\IRIS MIT WPU\\I.R.I.S-nextjs\\pages\\api\\paymentController",
    "content": "import crypto from 'crypto'; import supabase from '../../src/utils/supabase'; import { corsMiddleware } from '../../lib/corsMiddleware'; import razorpayInstance from '../../src/utils/razorpay'; export const checkout = async (req, res) => { try { const options = { amount: Number(req.body.amount * 100), currency: 'INR', }; console.log('Creating Razorpay order with options:', options); const order = await razorpayInstance.orders.create(options); if (!order) { return res.status(500).json({ success: false, error: 'Failed to create order', }); } console.log('Razorpay order response:', order); res.status(200).json({ success: true, order }); } catch (error) { console.error('Error creating order:', error); res.status(500).json({ success: false, error: 'Failed to create order' }); } }; export const paymentVerification = async (req, res) => { console.log('Request body:', req.body); const { razorpay_order_id, razorpay_payment_id, razorpay_signature } = req.body; if (!razorpay_order_id || !razorpay_payment_id || !razorpay_signature) { return res.status(400).json({ success: false, error: 'Missing required fields', }); } const body = razorpay_order_id + \"|\" + razorpay_payment_id; const expectedSignature = crypto.createHmac('sha256', process.env.RAZORPAY_API_SECRET) .update(body.toString()) .digest('hex'); console.log(\"sig received:\", razorpay_signature); console.log(\"sig generated:\", expectedSignature); const isAuthentic = expectedSignature === razorpay_signature; if (isAuthentic) { try { const { data, error } = await supabase .from('event2_razorpay_payments') .insert([ { razorpay_payment_id, razorpay_order_id, razorpay_signature, created_at: new Date().toISOString() } ]); if (error) { console.error('Error inserting payment details:', error); return res.status(500).json({ success: false, error: 'Failed to insert payment details', }); } res.redirect(`http://localhost:3000/paymentsuccess?reference=${razorpay_payment_id}`); } catch (error) { console.error('Error inserting:', error); res.status(500).json({ success: false, error: 'Failed to insert payment details', }); } } else { res.status(400).json({ success: false, error: 'Invalid signature', }); } }; export default corsMiddleware((req, res) => { if (req.method === 'POST') { if (req.url === '/api/checkout') { return checkout(req, res); } else if (req.url === '/api/paymentverification') { return paymentVerification(req, res); } } res.setHeader('Allow', ['POST']); res.status(405).end(`Method ${req.method} Not Allowed`); });",
    "questions": [
      "Tell me about paymentController",
      "What is on the paymentController page",
      "paymentController information"
    ]
  },
  {
    "route": "d:\\Kushagra\\Programming\\IRIS MIT WPU\\I.R.I.S-nextjs\\pages\\blog\\crispr",
    "content": "import React, { useState, useEffect, useCallback } from 'react'; import Link from 'next/link'; import styles from './data-loss.module.css'; import supabase from '../../src/utils/supabase'; import { ToastContainer, toast } from 'react-toastify'; import 'react-toastify/dist/ReactToastify.css'; import Image from 'next/image'; function Blog5() { const [comments, setComments] = useState([]); const [newComment, setNewComment] = useState(''); const [commenterName, setCommenterName] = useState(''); const [deviceId, setDeviceId] = useState(null); const [vote, setVote] = useState(null); const [voteCounts, setVoteCounts] = useState({ upvotes: 0, downvotes: 0 }); const postId = 5; useEffect(() => { const storedDeviceId = localStorage.getItem('deviceId'); if (!storedDeviceId) { const newDeviceId = 'device-' + Math.random().toString(36).substring(2); localStorage.setItem('deviceId', newDeviceId); setDeviceId(newDeviceId); } else { setDeviceId(storedDeviceId); } }, []); useEffect(() => { if (deviceId) { console.log('Current Device ID:', deviceId); fetchComments(); fetchVoteStatus(); } }, [deviceId]); const fetchVoteStatus = async () => { try { const { data: voteData, error: voteError } = await supabase .from('votes') .select('vote_type') .eq('device_id', deviceId) .eq('post_id', postId) .single(); if (voteError && voteError.code !== 'PGRST116') { console.error('Error fetching vote status:', voteError); } else { setVote(voteData?.vote_type || null); } const { data: upvoteData, error: upvoteError } = await supabase .from('votes') .select('*') .eq('post_id', postId) .eq('vote_type', 'upvote'); const { data: downvoteData, error: downvoteError } = await supabase .from('votes') .select('*') .eq('post_id', postId) .eq('vote_type', 'downvote'); if (upvoteError || downvoteError) { console.error('Error fetching vote counts:', upvoteError || downvoteError); } else { setVoteCounts({ upvotes: upvoteData?.length || 0, downvotes: downvoteData?.length || 0 }); } } catch (error) { console.error('Error in fetchVoteStatus:', error); } }; const fetchComments = async () => { const { data, error } = await supabase .from('comments') .select('*') .eq('post_id', postId) .order('created_at', { ascending: false }); if (error) { console.error('Error fetching comments:', error); } else { setComments(data || []); } }; const handleVote = async (voteType) => { try { if (!deviceId) { toast.error('Unable to vote at this time'); return; } const { data: existingVote, error: fetchError } = await supabase .from('votes') .select('*') .eq('post_id', postId) .eq('device_id', deviceId) .single(); if (fetchError && fetchError.code !== 'PGRST116') { console.error('Error fetching existing vote:', fetchError); return; } if (existingVote) { if (existingVote.vote_type === voteType) { toast.info('You have already voted!'); return; } else { const { error: updateError } = await supabase .from('votes') .update({ vote_type: voteType }) .eq('post_id', postId) .eq('device_id', deviceId); if (updateError) { console.error('Error updating vote:', updateError); return; } toast.success(`Vote changed to ${voteType}!`); setVote(voteType); } } else { const { error: insertError } = await supabase .from('votes') .insert({ post_id: postId, vote_type: voteType, device_id: deviceId }); if (insertError) { console.error('Error inserting vote:', insertError); return; } toast.success(`Successfully ${voteType}d!`); setVote(voteType); } await fetchVoteStatus(); } catch (error) { console.error('Error in handleVote:', error); toast.error('Error processing vote'); } }; const handleCommentSubmit = async () => { if (!newComment || !commenterName) { toast.error('Please enter your name and comment!'); return; } const { error } = await supabase .from('comments') .insert({ post_id: postId, username: commenterName, comment: newComment, device_id: deviceId, }); if (error) { console.error('Error submitting comment:', error); toast.error('Failed to submit comment!'); } else { setNewComment(''); setCommenterName(''); fetchComments(); toast.success('Comment added successfully!'); } }; return ( CRISPR Revolutionizing Genetics with Precision and Possibility By Aakanksha Pansare{' '} & Nishtha | February 16, 2025 “Imagine having the power to edit the DNA of living organisms—Welcome to the world of CRISPR, where science fiction is becoming science fact!” The world of genetics has been completely transformed by a game changing breakthrough - CRISPR GENE EDITING. The 2012 revolution with CRISPR Shifed the ballooning world of genetics forever. Its applications in agriculture and medicine are nothing less than astounding. Because of the palindromic traits of CRISPR, it has taken Precison Focused Molecular Biology and other industries by storm as its capability to edit genes, manipulate and cut specific strands of DNA is unmatched. This makes me question, what does this mean for the future of science? I am sure you wish to know as well, so buckle up. Out of all technologies available, CRISPR is the most exciting considering the unimaginable results that gene editing can produce. What's more astounding is the way it was discovered! The discovery of these clustered DNA sequences occurred independently in three different parts of the world. The first discovery was in 1987 by Yoshizumi, a researcher at Osaka University. It was serendipity—they accidentally cloned part of a CRISPR sequence together with the \"iap\" gene of *Escherichia coli* (a bacterium). The second discovery occurred in 1993. Two researchers studying *Mycobacterium tuberculosis* in the Netherlands observed diversity in its DNA sequences. The third discovery was by Francisco Mojica at the University of Alicante in Spain. He studied the function of repeats in the archaeal species *Haloferax* and *Haloarcula*. Transcription of these interrupted repeats led to the first full characterization of CRISPR. Do you know that Cas9 (or also known as \"CRISPR-associated protein 9\") is an enzyme that opens up specific strands of DNA that are complementary to the CRISPR sequence. For this, it uses the CRISPER sequence as a guide. Cas9 and CRISPR sequences is the basis of a CRISPR-Cas9 that is used to edit genes within living organisms. The applications include biological research, development of biotechnological products and treatment of diseases. The CRISPR-Cas9 system consists of two key molecules that cause mutations into the DNA. These are: An enzyme called Cas9, also known as a pair of 'molecular scissors' that can cut the two strands of DNA at a specific location. A piece of RNA called guide RNA (gRNA) which consists of a small piece of pre-designed RNA sequence (about 20 bases long) within a longer RNA scaffold. This sequence guides the Cas 9 to right part for the scaffold to bind to the DNA. The Cas9 follows the guide RNA to the same location in the DNA sequence and makes a double stranded cut across both strands of the DNA. At this stage the cell recognizes that the DNA is damaged and tries to repair it. Therefore, the CRISPER Cas9 system works on the principle of homologous recombination, where two homologous chromosomes combine. The target sequence (complementary to the sgRNA sequence) is followed by two cytosine nucleotides because the sgRNA binds best when the opposite DNA strand is comprised of any nucleotide followed by two guanines (-NGG). This sequence is called a Protospacer Adjacent Motif (PAM) sequence. In Conclusion, the development of this new tool was only possible due to the pioneering work of researching about the 2D structural and functional properties of Leptospira genomics. The birth of \"molecular scissors\" Cas9 and the system of guide RNA would soon enable biologists to make extremely precise alterations in the DNA strand of an organism. The introduction of genetic transformation and planting changed everything for humanity, agriculture, and medicine as areas previously defined by boundaries of science fiction were newly opened. Simulations of Cas9 have undoubtedly changed the notions tethering the future of genetic and therapeutic engineering. Summary CRISPER is no doubt one of the most successful inventions for gene editing, which is itself a heroic cure for many uncurable diseases. What's more interesting is its discovery and its working! The invention of CRISPR, which now encompasses clustered DNA sequences, was nothing short of revolutionary for genetic studies in the world. The amazing finding of CRISPR-Cas9 stemmed from researchers working independently in Spain, Japan, and the Netherlands in the late 1980s and early 1990s. The invention of CRISPR, which now encompasses clustered DNA sequences, was nothing short of revolutionary for genetic studies in the world. The amazing finding of CRISPR-Cas9 stemmed from researchers working independently in Spain, Japan, and the Netherlands in the late 1980s and early 1990s. References CRISPR-Wikipedia Methods and Technology CRISPR/Cas9 gene editing Free Resources rhAmpSeq™ CRISPR Data Analysis Tool Genome Engineering Introduction to CRISPR-Cas9 Techniques handleVote('upvote')} className={`${styles.voteButton} ${vote === 'upvote' ? styles.active : ''}`}> ▲ Upvote ({voteCounts.upvotes}) handleVote('downvote')} className={`${styles.voteButton} ${vote === 'downvote' ? styles.active : ''}`}> ▼ Downvote ({voteCounts.downvotes}) Comments {comments.length === 0 ? ( No comments added yet. ) : ( comments.map((comment) => ( {comment.username}: {comment.comment} )) )} Add your Comment setCommenterName(e.target.value)} className={styles.commentInput} /> setNewComment(e.target.value)} className={styles.commentInput} /> Submit Comment Back to Blogs ); } export default Blog5;",
    "questions": [
      "Tell me about crispr",
      "What is on the crispr page",
      "crispr information"
    ]
  },
  {
    "route": "d:\\Kushagra\\Programming\\IRIS MIT WPU\\I.R.I.S-nextjs\\pages\\blog\\data-loss",
    "content": "import React, { useState, useEffect, useCallback } from 'react'; import Link from 'next/link'; import styles from './data-loss.module.css'; import supabase from '../../src/utils/supabase'; import { ToastContainer, toast } from 'react-toastify'; import 'react-toastify/dist/ReactToastify.css'; function Blog2() { const [comments, setComments] = useState([]); const [newComment, setNewComment] = useState(''); const [commenterName, setCommenterName] = useState(''); const [deviceId, setDeviceId] = useState(null); const [vote, setVote] = useState(null); const [voteCounts, setVoteCounts] = useState({ upvotes: 0, downvotes: 0 }); const postId = 2; useEffect(() => { const storedDeviceId = localStorage.getItem('deviceId'); if (!storedDeviceId) { const newDeviceId = 'device-' + Math.random().toString(36).substring(2); localStorage.setItem('deviceId', newDeviceId); setDeviceId(newDeviceId); } else { setDeviceId(storedDeviceId); } }, []); useEffect(() => { if (deviceId) { console.log('Current Device ID:', deviceId); fetchComments(); fetchVoteStatus(); } }, [deviceId]); const fetchVoteStatus = async () => { try { const { data: voteData, error: voteError } = await supabase .from('votes') .select('vote_type') .eq('device_id', deviceId) .eq('post_id', postId) .single(); if (voteError && voteError.code !== 'PGRST116') { console.error('Error fetching vote status:', voteError); } else { setVote(voteData?.vote_type || null); } const { data: upvoteData, error: upvoteError } = await supabase .from('votes') .select('*') .eq('post_id', postId) .eq('vote_type', 'upvote'); const { data: downvoteData, error: downvoteError } = await supabase .from('votes') .select('*') .eq('post_id', postId) .eq('vote_type', 'downvote'); if (upvoteError || downvoteError) { console.error('Error fetching vote counts:', upvoteError || downvoteError); } else { setVoteCounts({ upvotes: upvoteData?.length || 0, downvotes: downvoteData?.length || 0 }); } } catch (error) { console.error('Error in fetchVoteStatus:', error); } }; const fetchComments = async () => { const { data, error } = await supabase .from('comments') .select('*') .eq('post_id', postId) .order('created_at', { ascending: false }); if (error) { console.error('Error fetching comments:', error); } else { setComments(data || []); } }; const handleVote = async (voteType) => { try { if (!deviceId) { toast.error('Unable to vote at this time'); return; } const { data: existingVote, error: fetchError } = await supabase .from('votes') .select('*') .eq('post_id', postId) .eq('device_id', deviceId) .single(); if (fetchError && fetchError.code !== 'PGRST116') { console.error('Error fetching existing vote:', fetchError); return; } if (existingVote) { if (existingVote.vote_type === voteType) { toast.info('You have already voted!'); return; } else { const { error: updateError } = await supabase .from('votes') .update({ vote_type: voteType }) .eq('post_id', postId) .eq('device_id', deviceId); if (updateError) { console.error('Error updating vote:', updateError); return; } toast.success(`Vote changed to ${voteType}!`); setVote(voteType); } } else { const { error: insertError } = await supabase .from('votes') .insert({ post_id: postId, vote_type: voteType, device_id: deviceId }); if (insertError) { console.error('Error inserting vote:', insertError); return; } toast.success(`Successfully ${voteType}d!`); setVote(voteType); } await fetchVoteStatus(); } catch (error) { console.error('Error in handleVote:', error); toast.error('Error processing vote'); } }; const handleCommentSubmit = async () => { if (!newComment || !commenterName) { toast.error('Please enter your name and comment!'); return; } const { error } = await supabase .from('comments') .insert({ post_id: postId, username: commenterName, comment: newComment, device_id: deviceId, }); if (error) { console.error('Error submitting comment:', error); toast.error('Failed to submit comment!'); } else { setNewComment(''); setCommenterName(''); fetchComments(); toast.success('Comment added successfully!'); } }; return ( Almost a Data Loss: The Security Breach We Overcame An Inside Look at the Security Flaw That Nearly Wiped Our Data By Aaryan Kumbhare | February 12, 2025 Overview about I.R.I.S. Website. In today's dynamic and rapidly-evolving digital ecosystem, it is important for an organisation to set up their online presence, so that they can meet the growing demands of their audience and help in increasing the scale of their services. Deployment of a muscular and scalable website acts as a hub for the operations of an organisation, real-time updates about the work of the organisation, showcasing their services and a portal for communication with their customers. This helps in enhancing the user engagement, quality of services; eventually leading to the overall growth of the organisation. I.R.I.S. website acts as a crucial platform for showcasing and promoting the club, engaging potential members and boosting club’s visibility on our campus. Our website serves as a hub for all our activities, events, announcements and important details, while also talking about the past events, activities and showcasing club’s achievements. It also serves as a networking portal for connecting with the members, mentors and the alumni, while enhancing the communication through engaging podcasts. The website also serves as a platform for all our event registrations and online payments, something which we would be discussing in depth in the upcoming sections! Let’s start with the main point: Now, I’m sure that you are aware about the importance of our website. We will now start with some technicalities and components of our website. The frontend of our website is written in a popular Javascript library, React.JS. To make the website more responsive and enhance the user experience, we have used Bootstrap, a very popular CSS framework. Data storage and management is an important aspect for an organisation. Similarly, for our backend, we have used Supabase SQL, a powerful database powered by PostgresDB, as our database, for keeping the data of our users secure. For registrations and payments, we need a payment gateway. For this purpose, we have used Razorpay as our payment gateway API for facilitating our online payments for events such as hackathons. For frontend deployment, we have used Vercel as our web hosting service and for backend deployment, we use Vercel Serverless Edge Functions. Also, GitHub is used for our version control and collaboration. Additionally, our github repository was integrated with vercel to consistently make seamless updates to our website. But, there is a quote which I read once, “In every problem lies an opportunity for growth and a lesson to be learned.” In the year of 2019, a popular American bank holding company, Capital One, faced a massive security breach, which exposed the data of over 100 million customers! But, there’s a catch here. The problem was not identified by any employee at the organisation’s security team, but rather, by one individual white hat hacker, who noticed the leaked data on GitHub! The hacker did report the problem immediately to the organisation and helped in preventing further exploitation of the vulnerability. The issue was related to misconfigured AWS cloud storage permissions, that allowed unauthorised access to sensitive data. This helped Capital One to get to know about the problems related to their cloud security practices. However, the organisation did face some consequences because of the breach, leading to regulatory fines and loss in customer trust. The hacker received a financial reward as a part of Capital One’s Bug Bounty Program. But wait, hold on for a moment! You must be wondering why we discussed this? What has it to do with our website? This is because our website did face a similar problem a couple of months back during the initial days of our hackathon registrations. Let's take a deep dive into the same!! What caused the issue? Our team created and deployed the I.R.I.S. website for registrations and payments of our upcoming event in September, the I.R.I.S. Innovation Hackathon. So as discussed above, our website used Supabase SQL in the backend for storage of user data and payment details. To prevent unauthorised access, Supabase SQL uses Row Level Security (RLS) features, which were initially enabled by our team. RLS features in SQL allows users to control which user or roles can access specific data in a table. RLS works by filtering rows based on the execution context of the query, rather than the current user access rights. However, with RLS enabled, data wasn't being saved, so the team decided to disable it temporarily, assuming that they could bypass security for a college-level event and address the same after the registration phase. And yes, you must have guessed it by now! This decision left our database unintentionally vulnerable, potentially allowing anyone to add, edit or delete data entries from our database! How we identified the issue and our story's white hat: The technical team deployed the website and initially, everything appeared to be running smoothly. The teams were able to submit their details and complete the transactions successfully. But later, while the team was reviewing the database, they noticed an empty row that didn’t align with any of our expected data entries. Uncertain about the cause, they decided to leave it as is. But now, our white hat, a college peer who identified himself as a participant in our event, reached out to our team! He specifically pointed out a critical issue which was related to our backend. He highlighted that the database was publicly accessible and vulnerable to CRUD operations, allowing anyone to make the changes due to the disabled RLS and an exposed key in the network tab. Moreover, the empty row which our team noticed while reviewing the database, was our peer’s way for testing the vulnerability. How we corrected it: The actions taken by our peer exposed our technical team to the full severity of the issue, emphasising the critical security vulnerabilities in our platform. The technical team quickly created a custom RLS script to secure the database and allow only the data entries for the team details and payments. After making the changes, the team first tested the script on a dummy site, replicating the functionalities of our live environment, to avoid any kind of disruptions on our production system. Subsequently, the team confirmed with the peer whether he could access or modify the dummy database using the updated script. The response was positive, indicating that the script was successfully executed! The script was later successfully deployed to the live system. Key takeaways: This experience highlighted the importance of not delaying security measures, even for seemingly minor projects. Conclusion To sum it up, even a small mistake can also offer you a lot of lessons. As we read in the quote a few sections above, mistakes and problems are an opportunity for improvement and growth, which goes along pretty well with our example! The incident helped the team to emphasise more on security and building a more robust and reliable website for our users. Thanks to our peer's timely alert, we were able to identify the vulnerability, and make the changes accordingly. This also teaches us about the necessity of networking and reaching out to people who may be facing issues they are unaware of. You never know when your contributions might have a greater impact, solving problems with huge potential risks for a greater good!! handleVote('upvote')} className={`${styles.voteButton} ${vote === 'upvote' ? styles.active : ''}`} > ▲ Upvote ({voteCounts.upvotes}) handleVote('downvote')} className={`${styles.voteButton} ${vote === 'downvote' ? styles.active : ''}`} > ▼ Downvote ({voteCounts.downvotes}) Comments {comments.length === 0 ? ( No comments added yet. ) : ( comments.map((comment) => ( {comment.username}: {comment.comment} )) )} Add your Comment setCommenterName(e.target.value)} className={styles.commentInput} /> setNewComment(e.target.value)} className={styles.commentInput} /> Submit Comment Back to Blogs ); } export default Blog2;",
    "questions": [
      "Tell me about data-loss",
      "What is on the data-loss page",
      "data-loss information"
    ]
  },
  {
    "route": "d:\\Kushagra\\Programming\\IRIS MIT WPU\\I.R.I.S-nextjs\\pages\\blog\\index",
    "content": "import React from 'react'; import styles from './Blog.module.css'; import Image from 'next/image'; import Link from 'next/link'; import 'bootstrap/dist/css/bootstrap.min.css'; function Blog() { const blogPosts = [ { id: 5, title: 'CRISPR: Revolutionizing Genetics', subtitle: 'Revolutionizing Genetics with Precision and Possibility', description: 'CRISPR technology is revolutionizing genetics by enabling precise gene editing, unlocking new possibilities in medicine, agriculture, and biotechnology.', author: ( <> Aakanksha Pansare {' '} & Nishtha </> ), date: 'February 16, 2025', image: '/crispr-img.png', imageWidth: 500, imageHeight: 300, }, { id: 3, title: 'Application of Nanotechnology in Defence Sector ', subtitle: 'Revolutionizing Defense: The Power of Nanotechnology in Military Advancements', description: 'Nanotechnology is revolutionizing defense with advanced armor, medical care, and stealth technology.', author: ( Shreya More ), date: 'February 15, 2025', image: '/nanotech3.png', imageWidth: 500, imageHeight: 300, }, { id: 4, title: 'Traditional Algorithms vs. Machine Learning', subtitle: 'A comprehensive dive into the definition, use cases, efficiency, positives and negatives', description: 'A comprehensive dive into the definition, use cases, efficiency, positives and negatives', author: ( Aaryan Kumbhare ), date: 'February 12, 2025', image: '/ai.png', imageWidth: 400, imageHeight: 300, }, { id: 2, title: 'Almost a Data Loss: The Security Breach We Overcame', subtitle: 'An Inside Look at the Security Flaw That Nearly Wiped Our Data', description: 'Our journey in building a platform for collaboration, hackathon management and seamless user experience.', author: ( Aaryan Kumbhare ), date: 'November 18, 2024', image: '/db.jpg', imageWidth: 500, imageHeight: 300, }, { id: 1, title: 'TARZAN: Revolutionizing Autonomous Vehicle Navigation', subtitle: 'Advanced Pothole Detection System', description: 'An innovative system using computer vision to enhance autonomous vehicle control.', author: ( Aaryan Kumbhare ), date: 'November 10, 2024', image: '/simulation.jpg', imageWidth: 500, imageHeight: 300, }, ]; const postLinks = { 1: \"tarzan\", 2: \"data-loss\", 3: \"nanotech-application\", 4: \"traditional-algo\", 5: \"crispr\", }; return ( Our Blog I.R.I.S. recent developments and ongoing projects. {blogPosts.map((post) => ( {post.title} {post.description} By {post.author} | {post.date} Guided by mentors{' '} Dr. Shamla Mantri {' '} & Dr. Yogesh Kulkarni Read More ))} ); } export default Blog;",
    "questions": [
      "Tell me about index",
      "What is on the index page",
      "index information"
    ]
  },
  {
    "route": "d:\\Kushagra\\Programming\\IRIS MIT WPU\\I.R.I.S-nextjs\\pages\\blog\\nanotech-application",
    "content": "import React, { useState, useEffect, useCallback } from 'react'; import Link from 'next/link'; import styles from './nanotech.module.css'; import supabase from '../../src/utils/supabase'; import { ToastContainer, toast } from 'react-toastify'; import 'react-toastify/dist/ReactToastify.css'; import Image from 'next/image'; function Blog4() { const [comments, setComments] = useState([]); const [newComment, setNewComment] = useState(''); const [commenterName, setCommenterName] = useState(''); const [deviceId, setDeviceId] = useState(null); const [vote, setVote] = useState(null); const [voteCounts, setVoteCounts] = useState({ upvotes: 0, downvotes: 0 }); const postId = 4; useEffect(() => { const storedDeviceId = localStorage.getItem('deviceId'); if (!storedDeviceId) { const newDeviceId = 'device-' + Math.random().toString(36).substring(2); localStorage.setItem('deviceId', newDeviceId); setDeviceId(newDeviceId); } else { setDeviceId(storedDeviceId); } }, []); useEffect(() => { if (deviceId) { console.log('Current Device ID:', deviceId); fetchComments(); fetchVoteStatus(); } }, [deviceId]); const fetchVoteStatus = async () => { try { const { data: voteData, error: voteError } = await supabase .from('votes') .select('vote_type') .eq('device_id', deviceId) .eq('post_id', postId) .single(); if (voteError && voteError.code !== 'PGRST116') { console.error('Error fetching vote status:', voteError); } else { setVote(voteData?.vote_type || null); } const { data: upvoteData, error: upvoteError } = await supabase .from('votes') .select('*') .eq('post_id', postId) .eq('vote_type', 'upvote'); const { data: downvoteData, error: downvoteError } = await supabase .from('votes') .select('*') .eq('post_id', postId) .eq('vote_type', 'downvote'); if (upvoteError || downvoteError) { console.error('Error fetching vote counts:', upvoteError || downvoteError); } else { setVoteCounts({ upvotes: upvoteData?.length || 0, downvotes: downvoteData?.length || 0 }); } } catch (error) { console.error('Error in fetchVoteStatus:', error); } }; const fetchComments = async () => { const { data, error } = await supabase .from('comments') .select('*') .eq('post_id', postId) .order('created_at', { ascending: false }); if (error) { console.error('Error fetching comments:', error); } else { setComments(data || []); } }; const handleVote = async (voteType) => { try { if (!deviceId) { toast.error('Unable to vote at this time'); return; } const { data: existingVote, error: fetchError } = await supabase .from('votes') .select('*') .eq('post_id', postId) .eq('device_id', deviceId) .single(); if (fetchError && fetchError.code !== 'PGRST116') { console.error('Error fetching existing vote:', fetchError); return; } if (existingVote) { if (existingVote.vote_type === voteType) { toast.info('You have already voted!'); return; } else { const { error: updateError } = await supabase .from('votes') .update({ vote_type: voteType }) .eq('post_id', postId) .eq('device_id', deviceId); if (updateError) { console.error('Error updating vote:', updateError); return; } toast.success(`Vote changed to ${voteType}!`); setVote(voteType); } } else { const { error: insertError } = await supabase .from('votes') .insert({ post_id: postId, vote_type: voteType, device_id: deviceId }); if (insertError) { console.error('Error inserting vote:', insertError); return; } toast.success(`Successfully ${voteType}d!`); setVote(voteType); } await fetchVoteStatus(); } catch (error) { console.error('Error in handleVote:', error); toast.error('Error processing vote'); } }; const handleCommentSubmit = async () => { if (!newComment || !commenterName) { toast.error('Please enter your name and comment!'); return; } const { error } = await supabase .from('comments') .insert({ post_id: postId, username: commenterName, comment: newComment, device_id: deviceId, }); if (error) { console.error('Error submitting comment:', error); toast.error('Failed to submit comment!'); } else { setNewComment(''); setCommenterName(''); fetchComments(); toast.success('Comment added successfully!'); } }; return ( Application of Nanotechnology in Defence Sector Revolutionizing Defense: The Power of Nanotechnology in Military Advancements By Shreya More | February 15, 2025 “The nanotechnologies of the future will have the power to turn science fiction into reality.” — Bill Gates One of the transformative areas of research in today's era is NANOTECHNOLOGY. Nanotechnology is transforming industries from medicine to electronics and is expected to drive the next major shift in science and technology. Its potential extends to defense, where its unique properties are being harnessed for advanced military technologies. The U.S. Department of Defense identified nanotechnology as one of six “Strategic Research Areas” in the mid-1990s.The main aims of military research into nanotechnology are to improve medical and casualty care for soldiers, and to produce lightweight, strong and multi-functional materials for use in clothing, both for protection and to provide enhanced connectivity. One of the primary objectives of military nanotechonolgy research is to enhance battlefield dressings. Nanomaterials of copper and silver have been proven to have antimicrobial effects which when applied to bandages can help to keep wounds free of infection aiding the soldier's wound healing process. Better Body Armour is another noteworthy area of research for the defence sector. Current body armor is limited in weight and effectiveness, as it may stop bullets but not the impact energy that can still cause harm. Nanomaterials, including tungsten and carbon nanotubes, are being researched to improve ballistic protection and help disperse impact energy, offering better protection in body armor, bulletproof vests, and protective gear. Another field for integration of nanotechnology and defence is Radar and Sonar Invisibility. Stealth ships and aircraft are being improved with the use of nanomaterials which can help 'hide' military hardware, such as submarines, from detection by radar and sonar systems. IIT Kanpur has developed the Anālakṣhya Metamaterial Surface Cloaking System (MSCS), a breakthrough in stealth technology designed to make objects nearly invisible to radar. In conclusion, nanotechnology in defense offers groundbreaking advancements in materials, weapons, communication, and healthcare. Its applications, from enhanced armor to improved medical care, are transformative. However, ethical and security concerns must be addressed to ensure responsible deployment. Summary Nanotechnology is revolutionizing various industries, and its potential in defense is vast. The U.S. Department of Defense identified it as a strategic research area in the 1990s, focusing on improving soldier care and developing advanced materials for protection and functionality. Key applications include improved battlefield dressings with antimicrobial nanomaterials like copper and silver to prevent infection and promote faster healing.Enhanced body armor using nanomaterials like tungsten and carbon nanotubes offers better protection against bullets and blasts, reducing fatal injury risks. Additionally, radar and sonar invisibility technologies are being developed using nanomaterials to enhance stealth capabilities in military vehicles, ships, and aircraft. While these innovations hold immense promise, the use of nanotechnology in defense also raises ethical and security concerns that must be addressed to ensure its responsible deployment. References Military Nanotechnology - PDF Nanotechnology in Defence Applications - SlideShare Free Resources Nanotechnology in Defence applications Military Nanotechnology handleVote('upvote')} className={`${styles.voteButton} ${vote === 'upvote' ? styles.active : ''}`}> ▲ Upvote ({voteCounts.upvotes}) handleVote('downvote')} className={`${styles.voteButton} ${vote === 'downvote' ? styles.active : ''}`}> ▼ Downvote ({voteCounts.downvotes}) Comments {comments.length === 0 ? ( No comments added yet. ) : ( comments.map((comment) => ( {comment.username}: {comment.comment} )) )} Add your Comment setCommenterName(e.target.value)} className={styles.commentInput} /> setNewComment(e.target.value)} className={styles.commentInput} /> Submit Comment Back to Blogs ); } export default Blog4;",
    "questions": [
      "Tell me about nanotech-application",
      "What is on the nanotech-application page",
      "nanotech-application information"
    ]
  },
  {
    "route": "d:\\Kushagra\\Programming\\IRIS MIT WPU\\I.R.I.S-nextjs\\pages\\blog\\tarzan",
    "content": "import React, { useState, useEffect } from 'react'; import Link from 'next/link'; import styles from './data-loss.module.css'; import supabase from '../../src/utils/supabase'; import { ToastContainer, toast } from 'react-toastify'; import 'react-toastify/dist/ReactToastify.css'; import Image from 'next/image'; function Blog1() { const [comments, setComments] = useState([]); const [newComment, setNewComment] = useState(''); const [commenterName, setCommenterName] = useState(''); const [deviceId, setDeviceId] = useState(null); const [vote, setVote] = useState(null); const [voteCounts, setVoteCounts] = useState({ upvotes: 0, downvotes: 0 }); const postId = 1; useEffect(() => { const storedDeviceId = localStorage.getItem('deviceId'); if (!storedDeviceId) { const newDeviceId = 'device-' + Math.random().toString(36).substring(2); localStorage.setItem('deviceId', newDeviceId); setDeviceId(newDeviceId); } else { setDeviceId(storedDeviceId); } }, []); useEffect(() => { if (deviceId) { console.log('Current Device ID:', deviceId); fetchComments(); fetchVoteStatus(); } }, [deviceId]); const fetchVoteStatus = async () => { try { const { data: voteData, error: voteError } = await supabase .from('votes') .select('vote_type') .eq('device_id', deviceId) .eq('post_id', postId) .single(); if (voteError && voteError.code !== 'PGRST116') { console.error('Error fetching vote status:', voteError); } else { setVote(voteData?.vote_type || null); } const { data: upvoteData, error: upvoteError } = await supabase .from('votes') .select('*') .eq('post_id', postId) .eq('vote_type', 'upvote'); const { data: downvoteData, error: downvoteError } = await supabase .from('votes') .select('*') .eq('post_id', postId) .eq('vote_type', 'downvote'); if (upvoteError || downvoteError) { console.error('Error fetching vote counts:', upvoteError || downvoteError); } else { setVoteCounts({ upvotes: upvoteData?.length || 0, downvotes: downvoteData?.length || 0 }); } } catch (error) { console.error('Error in fetchVoteStatus:', error); } }; const fetchComments = async () => { const { data, error } = await supabase .from('comments') .select('*') .eq('post_id', postId) .order('created_at', { ascending: false }); if (error) { console.error('Error fetching comments:', error); } else { setComments(data || []); } }; const handleVote = async (voteType) => { try { if (!deviceId) { toast.error('Unable to vote at this time'); return; } const { data: existingVote, error: fetchError } = await supabase .from('votes') .select('*') .eq('post_id', postId) .eq('device_id', deviceId) .single(); if (fetchError && fetchError.code !== 'PGRST116') { console.error('Error fetching existing vote:', fetchError); return; } if (existingVote) { if (existingVote.vote_type === voteType) { toast.info('You have already voted!'); return; } else { const { error: updateError } = await supabase .from('votes') .update({ vote_type: voteType }) .eq('post_id', postId) .eq('device_id', deviceId); if (updateError) { console.error('Error updating vote:', updateError); return; } toast.success(`Vote changed to ${voteType}!`); setVote(voteType); } } else { const { error: insertError } = await supabase .from('votes') .insert({ post_id: postId, vote_type: voteType, device_id: deviceId }); if (insertError) { console.error('Error inserting vote:', insertError); return; } toast.success(`Successfully ${voteType}d!`); setVote(voteType); } await fetchVoteStatus(); } catch (error) { console.error('Error in handleVote:', error); toast.error('Error processing vote'); } }; const handleCommentSubmit = async () => { if (!newComment || !commenterName) { toast.error('Please enter your name and comment!'); return; } const { error } = await supabase .from('comments') .insert({ post_id: postId, username: commenterName, comment: newComment, device_id: deviceId, }); if (error) { console.error('Error submitting comment:', error); toast.error('Failed to submit comment!'); } else { setNewComment(''); setCommenterName(''); fetchComments(); toast.success('Comment added successfully!'); } }; return ( TARZAN: Revolutionizing Autonomous Vehicle Navigation Advanced Pothole Detection System By Aaryan Kumbhare | February 12, 2025 The Future of Intelligent Transportation In the rapidly evolving landscape of automotive technology, autonomous vehicles represent more than just a technological marvel—they are a transformative solution to transportation challenges. The I.R.I.S. club's TARZAN project emerges as a groundbreaking initiative that pushes the boundaries of what's possible in autonomous vehicle navigation, particularly in challenging road conditions. The Context of Autonomous Driving The journey of autonomous vehicles has been fascinating. From Google's Self-Driving Car Project in 2009 to Tesla's Autopilot in 2015, the automotive industry has witnessed exponential growth. However, most existing solutions are limited to high-end vehicles with Advanced Driver Assistance Systems (ADAS). TARZAN challenges this paradigm. Our project aims to democratize autonomous navigation technology, making it accessible to vehicles across different technological spectrums. Understanding Autonomous Driving Levels Before diving into TARZAN's specifics, let's understand the autonomous driving spectrum: Level 0 (No Automation): Traditional vehicles where the driver controls everything Level 1 (Driver Assistance): Basic features like adaptive cruise control Level 2 (Partial Automation): Simultaneous steering and acceleration/braking assistance Level 3 (Conditional Automation): Vehicle can manage most driving tasks, with driver ready to intervene The TARZAN Approach: Intelligent Road Intelligent System Core Technologies TARZAN integrates multiple cutting-edge technologies: Computer Vision: Utilizing YOLOv8 for real-time object detection Machine Learning: Adaptive algorithms for intelligent decision-making Sensor Fusion: Combining multiple input streams for comprehensive environmental understanding Pothole Detection Mechanism The heart of TARZAN is its sophisticated pothole detection system: Real-time Processing: 30 frames per second video analysis Intelligent Classification: Categorizing potholes by severity Green: Small potholes (< 15,000 pixels) Yellow: Medium potholes (15,000 - 30,000 pixels) Red: Large potholes (> 30,000 pixels) Navigation and Obstacle Avoidance TARZAN employs an advanced A* pathfinding algorithm on a 30x30 grid, enabling: Dynamic route recalculation Immediate obstacle response Optimal path selection considering road surface quality Performance Metrics: Proving the Concept Our experimental results are compelling: Path Tracking Accuracy: Less than 0.5 meters deviation Obstacle Response Time: Under 200 milliseconds Detection Accuracy: Precision: 91% Recall: 89% Speed Adaptation: Seamless control between 0-60 km/h Technical Deep Dive: How TARZAN Works Data Processing Pipeline Input Capture: Video stream at 30 fps Frame Sampling: Process every fifth frame for efficiency Pothole Detection: YOLOv8 generates bounding boxes Severity Assessment: Area-based classification Navigation Adjustment: Immediate path recalculation Simulation Framework Our Pure Pursuit Controller enables: Precise waypoint tracking Dynamic velocity management Smooth trajectory following Beyond Technology: The Vision TARZAN isn't just a technical project—it's a vision of making roads safer, more accessible, and intelligent. By extending autonomous capabilities to vehicles without ADAS, we're democratizing advanced transportation technology. Conclusion: The Road Ahead As we continue refining TARZAN, we're not just developing a system—we're shaping the future of intelligent transportation. Our project demonstrates that with creativity, advanced algorithms, and a commitment to innovation, we can transform how we navigate our world. Stay tuned for more updates from the I.R.I.S. Research Team! Visual Insights of TARZAN's System MATLAB System Diagram Chassis Design handleVote('upvote')} className={`${styles.voteButton} ${vote === 'upvote' ? styles.active : ''}`} > ▲ Upvote ({voteCounts.upvotes}) handleVote('downvote')} className={`${styles.voteButton} ${vote === 'downvote' ? styles.active : ''}`} > ▼ Downvote ({voteCounts.downvotes}) Comments {comments.length === 0 ? ( No comments added yet. ) : ( comments.map((comment) => ( {comment.username}: {comment.comment} )) )} Add your Comment setCommenterName(e.target.value)} className={styles.commentInput} /> setNewComment(e.target.value)} className={styles.commentInput} /> Submit Comment Back to Blogs ); } export default Blog1;",
    "questions": [
      "Tell me about tarzan",
      "What is on the tarzan page",
      "tarzan information"
    ]
  },
  {
    "route": "d:\\Kushagra\\Programming\\IRIS MIT WPU\\I.R.I.S-nextjs\\pages\\blog\\traditional-algo",
    "content": "import React, { useState, useEffect, useCallback } from 'react'; import Link from 'next/link'; import styles from './trad.module.css'; import supabase from '../../src/utils/supabase'; import { ToastContainer, toast } from 'react-toastify'; import 'react-toastify/dist/ReactToastify.css'; import Image from 'next/image'; function Blog3() { const [comments, setComments] = useState([]); const [newComment, setNewComment] = useState(''); const [commenterName, setCommenterName] = useState(''); const [deviceId, setDeviceId] = useState(null); const [vote, setVote] = useState(null); const [voteCounts, setVoteCounts] = useState({ upvotes: 0, downvotes: 0 }); const postId = 3; useEffect(() => { const storedDeviceId = localStorage.getItem('deviceId'); if (!storedDeviceId) { const newDeviceId = 'device-' + Math.random().toString(36).substring(2); localStorage.setItem('deviceId', newDeviceId); setDeviceId(newDeviceId); } else { setDeviceId(storedDeviceId); } }, []); useEffect(() => { if (deviceId) { console.log('Current Device ID:', deviceId); fetchComments(); fetchVoteStatus(); } }, [deviceId]); const fetchVoteStatus = async () => { try { const { data: voteData, error: voteError } = await supabase .from('votes') .select('vote_type') .eq('device_id', deviceId) .eq('post_id', postId) .single(); if (voteError && voteError.code !== 'PGRST116') { console.error('Error fetching vote status:', voteError); } else { setVote(voteData?.vote_type || null); } const { data: upvoteData, error: upvoteError } = await supabase .from('votes') .select('*') .eq('post_id', postId) .eq('vote_type', 'upvote'); const { data: downvoteData, error: downvoteError } = await supabase .from('votes') .select('*') .eq('post_id', postId) .eq('vote_type', 'downvote'); if (upvoteError || downvoteError) { console.error('Error fetching vote counts:', upvoteError || downvoteError); } else { setVoteCounts({ upvotes: upvoteData?.length || 0, downvotes: downvoteData?.length || 0 }); } } catch (error) { console.error('Error in fetchVoteStatus:', error); } }; const fetchComments = async () => { const { data, error } = await supabase .from('comments') .select('*') .eq('post_id', postId) .order('created_at', { ascending: false }); if (error) { console.error('Error fetching comments:', error); } else { setComments(data || []); } }; const handleVote = async (voteType) => { try { if (!deviceId) { toast.error('Unable to vote at this time'); return; } const { data: existingVote, error: fetchError } = await supabase .from('votes') .select('*') .eq('post_id', postId) .eq('device_id', deviceId) .single(); if (fetchError && fetchError.code !== 'PGRST116') { console.error('Error fetching existing vote:', fetchError); return; } if (existingVote) { if (existingVote.vote_type === voteType) { toast.info('You have already voted!'); return; } else { const { error: updateError } = await supabase .from('votes') .update({ vote_type: voteType }) .eq('post_id', postId) .eq('device_id', deviceId); if (updateError) { console.error('Error updating vote:', updateError); return; } toast.success(`Vote changed to ${voteType}!`); setVote(voteType); } } else { const { error: insertError } = await supabase .from('votes') .insert({ post_id: postId, vote_type: voteType, device_id: deviceId }); if (insertError) { console.error('Error inserting vote:', insertError); return; } toast.success(`Successfully ${voteType}d!`); setVote(voteType); } await fetchVoteStatus(); } catch (error) { console.error('Error in handleVote:', error); toast.error('Error processing vote'); } }; const handleCommentSubmit = async () => { if (!newComment || !commenterName) { toast.error('Please enter your name and comment!'); return; } const { error } = await supabase .from('comments') .insert({ post_id: postId, username: commenterName, comment: newComment, device_id: deviceId, }); if (error) { console.error('Error submitting comment:', error); toast.error('Failed to submit comment!'); } else { setNewComment(''); setCommenterName(''); fetchComments(); toast.success('Comment added successfully!'); } }; return ( Traditional Algorithms vs. Machine Learning A comprehensive dive into the definition, use cases, efficiency, positives and negatives By Aaryan Kumbhare | February 12, 2025 Introduction In the modern world, we humans heavily rely on computer systems for various tasks, such as data processing, decision making, and automating various tasks. Ever wondered how the page ranking algorithms on search engines or facial recognition on our mobile phones work? Well, the answer lies somewhere in the different paradigms of traditional algorithms and machine learning! In the upcoming sections, we will be diving deep into the world of computing with traditional algorithms and complex, yet beautiful domain of machine learning. What are traditional algorithms? Traditional algorithms lay the foundation of computing. These are the algorithms which follow predefined rules to perform tasks and solve problems with precision. There won't be any harm in saying that the majority of modern computing, which we are about to discuss ahead, is somewhere built on top of traditional algos! What is machine learning? In the modern world of computer science, there are tons of buzz words out there… AI, AGI, ASI, machine learning, neural networks, deep learning, reinforcement learning, blah, blah! But to get a clear understanding of these, it is important to know what builds the foundation of some of those “buzz-words” mentioned above… Machine learning is the domain of artificial intelligence, which deals with allowing computers to learn from data and improve with time. Concepts like neural networks, deep learning, NLP, etc. as mentioned above, actually are subsets of machine learning itself! Similarities between traditional algorithms and machine learning algorithms Traditional algorithms marked the beginning of computing, whereas AI and ML are the present and give us an idea of what can be achieved in the upcoming years for computing. BUT! There is one major similarity between the both. Maths. Both traditional algorithms and ML algos heavily rely on mathematical foundations. Concepts such as linear algebra, graph theory, statistics, probability, and whatnot! When you enter a prompt on our favourite chatbot, you are getting the desired answer, but at the core, the backend, there are countless no. of matrices multiplying with each other for that desired answer!! A detailed comparison of differences between traditional algos and ML algos with the example of search engines: A century back, the main collection of data was available in books, present in libraries. Today's library is the internet. The internet is huge. As of January 2025, there are about 1.2 billion websites on the internet, but there's a catch! Only about 200 million of these are active. So, have you ever wondered, when you search for something, say on Google's search engine, how is it able to select the desired websites for you? This is where the interesting part starts and will also help us understand the differences between the 2 paradigms of this blog! Google's PageRank Algorithm: This is our example for traditional, rule-based algorithms. PageRank (PR) algorithm was developed by Larry Page and Sergey Brin in the year of 1996, at Stanford University. This algorithm is a way of measuring the importance of web pages. According to Google: PageRank works by counting the number and quality of links to a page to determine a rough estimate of how important the website is. The underlying assumption is that more important websites are likely to receive more links from other websites. The math behind this: the algorithm outputs a probability distribution used to represent the likelihood that a person randomly clicking on links will arrive at any particular page. Google's RankBrain and BERT algorithm: PageRank was a revolutionary algorithm. But, with the advancements in technology, Google Search also kept evolving. This came in the form of integration of ML, Neural Networks and Natural Language Processing with page ranking. RankBrain, launched in 2015 was Google's 1st AI powered algorithm. This algorithm incorporated the concepts of machine learning for better analysis and understanding of search requests, helping to curate results more dynamically. Unlike PR, which is rule based, RankBrain is an adaptive algorithm. BERT, abbreviation for Bidirectional Encoder Representations from Transformers, launched in 2018, is another ML based model, helps Google search to understand the context of words in a query, improving NLP. In simple terms, NLP is the area of AI which deals with computers understanding the human language and improving upon the interactions. Both the above mentioned algorithms are significant enhancements in Google Search. This also gives us an idea of how trained models differ from rule-based algorithms. So basically, to sum it up, PageRank focuses on the keywords mentioned in a search request, and ranking pages on the basis of backlinks. Whereas, with the help of NLP, the newer models such as RankBrain, BERT are trying to understand the CONTEXT of what you are asking for. Efficiency, Pros and Cons Traditional algorithms, being predefined, work efficiently with specific tasks and structured data. The traditional algorithms have well-defined time and space complexities. These algorithms do not require cutting edge hardware to train upon, i.e., lesser RAM + GPU power is required. However, these might fail while working with larger, unstructured datasets. Talking about ML algorithms, they are shaping the future of computing. They work efficiently with unstructured data and large datasets. Being dynamic as compared to traditional algorithms, ML excels in tasks such as image recognition. But to power those developments, there is a need for better hardware. For training ML models, there is a requirement of stronger GPUs, TPUs (Tensor Processing Units) for parallel processing, this means more capital and investments are required for optimizing those systems. The major difference between the two is about adaptability. As we have seen in the above example, ML models are reliant on the real-time data / large datasets, traditional algos lack the adaptive nature, and often fail in various tasks Conclusion From the above sections, we have got to understand the difference between traditional algos and ML. This also answers the question asked in the 1st paragraph. Page ranking works on the basis of traditional algorithms, and in the modern world, it incorporates the modern technologies like ML and NLP for better results. Our mobile phones use computer vision, another domain of ML, to analyze an image, helping the system to know that the person in front of the camera is you! So, to conclude, both the traditional algorithms and ML have their own strengths and use cases. One laid the foundation, the other is helping us create a better future for computing and technologies. The future lies in creating technologies which make human life better and technologies that supersede what we have today! Summary for Newsletter In the modern world, most of us rely on computers and mobiles for various tasks. But have you ever wondered, what goes on in the backend of those tasks? Suppose you search for your favourite food's recipe, how is Google able to bring in all the answers so quickly? Or how is your phone able to unlock just by looking at our face? This article dives into the forever evolving world of computing, its foundation laid by traditional algorithms and how machine learning is changing the landscape for the future. Also, we will find the answers to the questions mentioned above! Free Resources PageRank: https://www.geeksforgeeks.org/page-rank-algorithm-implementation/ More about PageRank: https://pi.math.cornell.edu/~mec/Winter2009/RalucaRemus/Lecture3/lecture3.html BERT: https://blog.google/products/search/search-language-understanding-bert/ Google ML Crash Course: https://developers.google.com/machine-learning/crash-course Reddit Community for ML: https://www.reddit.com/r/learnmachinelearning ML book: https://sebastianraschka.com/blog/2022/ml-pytorch-book.html ML notes(Stanford official): https://cs229.stanford.edu/notes2022fall/main_notes.pdf handleVote('upvote')} className={`${styles.voteButton} ${vote === 'upvote' ? styles.active : ''}`} > ▲ Upvote ({voteCounts.upvotes}) handleVote('downvote')} className={`${styles.voteButton} ${vote === 'downvote' ? styles.active : ''}`} > ▼ Downvote ({voteCounts.downvotes}) Comments {comments.length === 0 ? ( No comments added yet. ) : ( comments.map((comment) => ( {comment.username}: {comment.comment} )) )} Add your Comment setCommenterName(e.target.value)} className={styles.commentInput} /> setNewComment(e.target.value)} className={styles.commentInput} /> Submit Comment Back to Blogs ); } export default Blog3;",
    "questions": [
      "Tell me about traditional-algo",
      "What is on the traditional-algo page",
      "traditional-algo information"
    ]
  },
  {
    "route": "d:\\Kushagra\\Programming\\IRIS MIT WPU\\I.R.I.S-nextjs\\pages\\collaborations",
    "content": "import React, { useState, useEffect } from 'react'; import { Modal, Button } from 'react-bootstrap'; import styles from './collaborations.module.css'; import Image from 'next/image'; import Link from 'next/link'; import 'bootstrap/dist/css/bootstrap.min.css'; import { Code, Shield, Server, Cloud, GraduationCap } from 'lucide-react'; import supabase from '../src/utils/supabase'; import { ToastContainer, toast } from 'react-toastify'; import 'react-toastify/dist/ReactToastify.css'; const domainIcons = { \"Artificial Intelligence\": , \"Cybersecurity\": , \"Blockchain\": , \"IoT & Embedded Systems\": , }; const statusClasses = { \"Ongoing\": \"bg-success\", \"Completed\": \"bg-primary\", \"In Review\": \"bg-warning\", }; const borderColors = { \"Artificial Intelligence\": \"#9c27b0\", \"Blockchain\": \"#007bff\", \"Cybersecurity\": \"#ff9800\", \"IoT & Embedded Systems\": \"#4CAF50\", }; function Collaboration() { const [selectedProject, setSelectedProject] = useState(null); const [comments, setComments] = useState({}); const [formData, setFormData] = useState({}); const [deviceId, setDeviceId] = useState(null); const [vote, setVote] = useState(null); const [voteCounts, setVoteCounts] = useState({ upvotes: 0, downvotes: 0 }); const getCurrentProjectId = () => selectedProject?.id; // var postId = selectedProject ? selectedProject.id : 1; const collabProjects = [ { id: 1, title: 'Open Source AI Models', subtitle: 'Contributing to the Future of AI', description: 'An initiative to develop and refine AI models for diverse applications.', domain: 'Artificial Intelligence', branchYear: 'TY BTech CSE', status: 'Ongoing', guides: ['Dr. Shamla Mantri', 'Dr. Yogesh Kulkarni'], contributors: ( <> John Doe {' '} & Jane Smith </> ), githubLink: \"https://github.com/example1/opensource-ai\", date: 'March 10, 2025', image: '/ai.png', imageWidth: 500, imageHeight: 300, }, { id: 2, title: 'Secure Transactions', subtitle: 'Enhancing Security and Transparency', description: 'A project leveraging blockchain to ensure secure and transparent transactions.', domain: 'Blockchain', branchYear: 'TY BTech IT', status: 'Completed', guides: ['Dr. Shamla Mantri', 'Dr. Yogesh Kulkarni'], contributors: ( Alice Johnson ), githubLink: \"https://github.com/example2/secure-transactions\", date: 'February 20, 2025', image: '/ai.png', imageWidth: 500, imageHeight: 300, }, { id: 3, title: 'Cybersecurity Threat Analysis', subtitle: 'Detecting and Preventing Cyber Threats', description: 'A research project focused on identifying and mitigating cybersecurity threats using AI.', domain: 'Cybersecurity', branchYear: 'TY BTech CSE', status: 'In Review', guides: ['Dr. Shamla Mantri', 'Dr. Yogesh Kulkarni'], contributors: ( Michael Lee ), githubLink: \"https://github.com/example3/cybersecurity-analysis\", date: 'April 5, 2025', image: '/ai.png', imageWidth: 500, imageHeight: 300, }, { id: 4, title: 'IoT-based Smart Agriculture', subtitle: 'Automating Farming with IoT', description: 'Developing IoT-enabled sensors and AI models for smart farming and water management.', domain: 'IoT & Embedded Systems', branchYear: 'TY BTech ECE', status: 'Ongoing', guides: ['Dr. Shamla Mantri', 'Dr. Yogesh Kulkarni'], contributors: ( Sarah Patel ), githubLink: \"https://github.com/example4/smart-agriculture\", date: 'May 15, 2025', image: '/ai.png', imageWidth: 500, imageHeight: 300, }, ]; const handleShow = (project) => { setSelectedProject(project); if (!formData[project.id]) { setFormData(prev => ({ ...prev, [project.id]: { commenterName: '', newComment: '' } })); } }; const handleClose = () => setSelectedProject(null); useEffect(() => { const storedDeviceId = localStorage.getItem('deviceId'); if (!storedDeviceId) { const newDeviceId = 'device-' + Math.random().toString(36).substring(2); localStorage.setItem('deviceId', newDeviceId); setDeviceId(newDeviceId); } else { setDeviceId(storedDeviceId); } }, []); useEffect(() => { if (deviceId && selectedProject) { console.log('Current Device ID:', deviceId); fetchComments(selectedProject.id); fetchVoteStatus(selectedProject.id); } }, [deviceId, selectedProject]); const fetchVoteStatus = async (projectId) => { try { const { data: voteData, error: voteError } = await supabase .from('collab_votes') .select('vote_type') .eq('device_id', deviceId) .eq('post_id', projectId) .single(); if (voteError && voteError.code !== 'PGRST116') { console.error('Error fetching vote status:', voteError); } else { setVote(voteData?.vote_type || null); } const { data: upvoteData, error: upvoteError } = await supabase .from('collab_votes') .select('*') .eq('post_id', projectId) .eq('vote_type', 'upvote'); const { data: downvoteData, error: downvoteError } = await supabase .from('collab_votes') .select('*') .eq('post_id', projectId) .eq('vote_type', 'downvote'); if (upvoteError || downvoteError) { console.error('Error fetching vote counts:', upvoteError || downvoteError); } else { setVoteCounts({ upvotes: upvoteData?.length || 0, downvotes: downvoteData?.length || 0 }); } } catch (error) { console.error('Error in fetchVoteStatus:', error); } }; const fetchComments = async (projectId) => { const { data, error } = await supabase .from('collab_comments') .select('*') .eq('post_id', projectId) .order('created_at', { ascending: false }); if (error) { console.error('Error fetching comments:', error); } else { setComments(prev => ({ ...prev, [projectId]: data || [] })); } }; const handleVote = async (voteType) => { const projectId = getCurrentProjectId(); if (!projectId) return; try { if (!deviceId) { toast.error('Unable to vote at this time'); return; } const { data: existingVote, error: fetchError } = await supabase .from('collab_votes') .select('*') .eq('post_id', projectId) .eq('device_id', deviceId) .single(); if (fetchError && fetchError.code !== 'PGRST116') { console.error('Error fetching existing vote:', fetchError); return; } if (existingVote) { if (existingVote.vote_type === voteType) { toast.info('You have already voted!'); return; } else { const { error: updateError } = await supabase .from('collab_votes') .update({ vote_type: voteType }) .eq('post_id', projectId) .eq('device_id', deviceId); if (updateError) { console.error('Error updating vote:', updateError); return; } setVote(voteType); toast.success(`Vote changed to ${voteType}!`); } } else { const { error: insertError } = await supabase .from('collab_votes') .insert({ post_id: projectId, vote_type: voteType, device_id: deviceId }); if (insertError) { console.error('Error inserting vote:', insertError); return; } setVote(voteType); toast.success(`Successfully ${voteType}d!`); } await fetchVoteStatus(projectId); } catch (error) { console.error('Error in handleVote:', error); toast.error('Error processing vote'); } }; const handleCommentSubmit = async () => { const projectId = getCurrentProjectId(); if (!projectId) return; const currentFormData = formData[projectId] || { commenterName: '', newComment: '' }; if (!currentFormData.newComment || !currentFormData.commenterName) { toast.error('Please enter your name and comment!'); return; } const { error } = await supabase .from('collab_comments') .insert({ post_id: projectId, username: currentFormData.commenterName, comment: currentFormData.newComment, device_id: deviceId, }); if (error) { console.error('Error submitting comment:', error); toast.error('Failed to submit comment!'); } else { // Reset form data for this project only setFormData(prev => ({ ...prev, [projectId]: { commenterName: '', newComment: '' } })); fetchComments(projectId); toast.success('Comment added successfully!'); } }; const handleFormChange = (projectId, field, value) => { setFormData(prev => ({ ...prev, [projectId]: { ...prev[projectId], [field]: value } })); }; return ( Collaboration Projects Discover our latest collaborative research and development initiatives. {collabProjects.map((project) => ( {project.title} {project.description} {domainIcons[project.domain]} Domain: {project.domain} Project Head: {project.branchYear} Status: {project.status} Contributors: {project.contributors} | {project.date} Guided by {' '} Dr. Shamla Mantri {' '} & {' '} Dr. Yogesh Kulkarni handleShow(project)} style={{ width: \"100%\", textAlign: \"center\" }}>View More ))} {selectedProject && ( {selectedProject.title} {selectedProject.subtitle} {selectedProject.description} Contributors: {selectedProject.contributors} Domain: {selectedProject.domain} Status: {selectedProject.status} GitHub Repository: {selectedProject.githubLink} Guided by {' '} Dr. Shamla Mantri {' '} & {' '} Dr. Yogesh Kulkarni handleVote('upvote')} className={`${styles.voteButton} ${vote === 'upvote' ? styles.active : ''}`}> ▲ Upvote ({voteCounts.upvotes}) handleVote('downvote')} className={`${styles.voteButton} ${vote === 'downvote' ? styles.active : ''}`}> ▼ Downvote ({voteCounts.downvotes}) Comments {!comments[selectedProject?.id] || comments[selectedProject?.id].length === 0 ? ( No comments added yet. ) : ( comments[selectedProject?.id].map((comment) => ( {comment.username}: {comment.comment} )) )} Add your Comment handleFormChange(selectedProject?.id, 'commenterName', e.target.value)} className={styles.commentInput} /> handleFormChange(selectedProject?.id, 'newComment', e.target.value)} className={styles.commentInput} /> Submit Comment Close )} ); } export default Collaboration;",
    "questions": [
      "Tell me about collaborations",
      "What is on the collaborations page",
      "collaborations information"
    ]
  },
  {
    "route": "d:\\Kushagra\\Programming\\IRIS MIT WPU\\I.R.I.S-nextjs\\pages\\contact\\index",
    "content": "import React, { useState, useRef, useEffect } from 'react'; import supabase from '../../src/utils/supabase'; import styles from './Contact.module.css'; function Contact() { const [link, setLink] = useState(\"/bgVid.webm\") const [formData, setFormData] = useState({ name: '', email: '', phone: '', subject: '', message: '', }); const [showNotification, setShowNotification] = useState(false); const formRef = useRef(null); useEffect(() => { }, []); const handleChange = (e) => { setFormData({ ...formData, [e.target.name]: e.target.value }); }; const handleSubmit = async (e) => { e.preventDefault(); try { const formDataWithTimestamp = { ...formData, created_at: new Date().toISOString(), }; // Insert form data into Supabase const { data, error } = await supabase .from('contacts') .insert(formDataWithTimestamp); if (error) { console.error('Error inserting data:', error); } else { console.log('Data inserted'); setShowNotification(true); setFormData({ name: '', email: '', phone: '', subject: '', message: '', }); } } catch (error) { console.error('Error submitting form:', error); } }; const handleOkayButton = () => { setShowNotification(false); }; return ( Your browser does not support the video tag. Contact Us If you have a new and innovative scalable project, unique idea, or research you'd like to pursue, fill out the form below. We're here to help guide and support you! Name* Email* Phone Number* Subject* Description* Send Message {showNotification && ( Message sent successfully! Your message has been sent. Thank you for reaching out! Okay )} ); } export default Contact;",
    "questions": [
      "Tell me about index",
      "What is on the index page",
      "index information"
    ]
  },
  {
    "route": "d:\\Kushagra\\Programming\\IRIS MIT WPU\\I.R.I.S-nextjs\\pages\\events\\1\\index",
    "content": "import React from 'react'; import Link from 'next/link'; import Image from 'next/image'; import 'bootstrap/dist/css/bootstrap.min.css'; import styles from './event1.module.css'; const Event1 = () => { return ( <> 🚀 Inter-Campus Innovation Hackathon Recap 🚀 Celebrating a Journey of Creativity & Impact! Date: 16th February 2024 Venue: MIT-WPU Campus Host: MIT-TBI in collaboration with ASPIRE, Engineer's Cradle & I.R.I.S. The Inter-Campus Open Innovation Hackathon brought together the brightest minds from Pune campuses, fostering an environment of creativity, technology, and innovation to tackle real-world challenges. How It Unfolded 💡 Teams formed across universities, uniting to address impactful problems. The excitement built as the college-level selection rounds culminated in the thrilling grand finale at MIT-WPU Pune: a vibrant 12-hour hackathon! Event Highlights 🌟 Teamwork in Action: Diverse teams showcased innovative ideas in Technology and Social Impact. Mentorship & Guidance: Faculty mentors and industry experts provided invaluable support, helping teams refine their ideas into viable solutions. Prototyping: Teams developed prototypes that hold the potential to shape the future! Final Presentations: The event culminated with electrifying presentations to a panel of industry leaders, celebrating the best ideas through rigorous judging. Recognizing Excellence... 💰 🥇 1st Prize: ₹10,000 Cash + Mentorship & Support 🚀 🥈 2nd Prize: ₹6,000 Cash + Continued Guidance 💼 🥉 3rd Prize: ₹4,000 Cash + Growth Opportunities 🌱 The top 10 teams not only received certificates but also ongoing technical and research support from Engineer's Cradle and opportunities for incubation at MIT-TBI. The potential for securing up to ₹10 Lakhs in funding for selected projects made the stakes even higher! 🤑💥 Rules & Regulations ⚖️ Who Could Join? Any student from a participating Pune campus, across all years and branches! Team Size: 1-2 students from the same or different universities. Judging Criteria: Creativity: Originality and innovation of the idea. Technical Complexity: Demonstration of technical skills. Problem-Solving Effectiveness: Effectiveness in addressing the challenge. Potential Impact: Likelihood of making a significant impact. Significance of the Event 🌟 The hackathon was more than just a competition; it was a platform for students to showcase their innovative ideas and collaborate with industry professionals. The event highlighted the importance of inter-campus collaboration and innovation in driving forward technological advancements and solving real-world problems. Stay Connected 📩 If you're interested in participating in future events or have any questions, feel free to reach out to us! Contact Us </> ); }; export default Event1;",
    "questions": [
      "Tell me about index",
      "What is on the index page",
      "index information"
    ]
  },
  {
    "route": "d:\\Kushagra\\Programming\\IRIS MIT WPU\\I.R.I.S-nextjs\\pages\\events\\2\\index",
    "content": "import React from 'react'; import Link from 'next/link'; import Image from 'next/image'; import 'bootstrap/dist/css/bootstrap.min.css'; import styles from './event2.module.css'; const Event2 = () => { return ( <> 🚀 IRIS Innovation Hackathon Recap 🚀 Empowering Ideas & Sparking Innovation Date: 27th-28th September 2024 Venue: MIT-WPU Campus Host: IRIS in collaboration with BharatGo The IRIS Innovation Hackathon brought together the brightest minds from across MIT, inspiring participants to tackle real-world challenges with creativity and technical expertise in a high-energy environment. How It Happened 🔥 Participants from MIT collaborated in diverse teams, creating innovative solutions with real-world impact. Guided by mentors, they refined their projects, culminating in a day of intense presentations to an expert panel. Event Highlights 🌟 Expert Mentorship: Guidance from faculty and industry mentors enriched each team's approach. Prototyping & Presentation: Teams showcased promising prototypes with impressive final presentations. Celebrating Innovation: Top teams were celebrated for their creativity, technical execution, and potential impact. Prizes & Recognition 💰 🥇 1st Place: ₹10,000 Cash 🥈 2nd Place: ₹6,000 + Continued Support 💼 🥉 3rd Place: ₹4,000 + Growth Prospects 🌱 Top teams received the opportunity for further incubation and technical support from BharatGo, creating a path to transform ideas into impactful solutions with future funding opportunities. Hackathon Winning Teams 🏆 🥇 Winner: Team Turtle 🥈 Runner-Up: Neuro Guardian 🥉 2nd Runner-Up: Hydrosols Mentors & Guests 🎓 We extend our heartfelt thanks to our mentors, including Dr. Shamla Mantri, Dr. Yogesh Kulkarni, Dr. Mangesh Bedekar, Dr. Balaji M Patil, and special guests Mr. Pravin Adik (BharatGo CEO) and Mr. Saurabh Kane, whose expertise and support were invaluable to the participants. Why It Mattered 🌍 This hackathon was a unique platform for collaboration, fostering the creativity needed to drive tech-driven solutions for a better future. Participants left with enriched perspectives and connections that will fuel future innovations. Stay Connected 📩 If you're interested in participating in future events or have any questions, feel free to reach out to us! Contact Us </> ); }; export default Event2;",
    "questions": [
      "Tell me about index",
      "What is on the index page",
      "index information"
    ]
  },
  {
    "route": "d:\\Kushagra\\Programming\\IRIS MIT WPU\\I.R.I.S-nextjs\\pages\\events\\3\\index",
    "content": "import React from 'react'; import Link from 'next/link'; import Image from 'next/image'; import 'bootstrap/dist/css/bootstrap.min.css'; import styles from './event3.module.css'; const Event3 = () => { return ( <> { } I.R.I.S. Ice Breaker 2025 Date: 24th January 2025 Venue: MIT-WPU Campus Host: IRIS Event Objective To welcome and familiarize the new recruits with the IRIS team. To engage in interactive activities for a fun, lighthearted experience. To discuss and exchange ideas for the upcoming events being planned by IRIS. How It Happened Over 25+ members enthusiastically joined the IRIS Ice Breaker 2025 session, along with the core team and existing members. Opening Session A brief introduction about IRIS, its mission, and vision was shared to inspire the new recruits. Team Introductions A brief introduction about IRIS, its mission, and vision was shared to inspire the new recruits. Ice Breaker Games & Activities Core members introduced themselves, including their roles and contributions to IRIS. New members were given the opportunity to introduce themselves and share their interests. Discussion on Upcoming Events A brainstorming session was held to discuss the next big event planned by IRIS. Feedback and Closing Remarks New members shared their initial impressions and excitement about joining IRIS. The club President thanked everyone for their active participation and enthusiasm. The event concluded with a group photo to commemorate the successful session. Session Highlights Strengthened relationships among IRIS members, both old and new. Increased enthusiasm and involvement from the recruits. Valuable inputs and ideas gathered for the upcoming event. Fostered a collaborative and welcoming environment. Conclusion The IRIS Ice Breaker 2025 successfully achieved its objectives of building team spirit, engaging recruits, and laying the foundation for future activities. The session reflected the vibrant and innovative spirit of IRIS and set a positive tone for the year ahead. Stay Connected If you're interested in participating in future events or have any questions, feel free to reach out to us! Contact Us </> ); }; export default Event3;",
    "questions": [
      "Tell me about index",
      "What is on the index page",
      "index information"
    ]
  },
  {
    "route": "d:\\Kushagra\\Programming\\IRIS MIT WPU\\I.R.I.S-nextjs\\pages\\events\\index",
    "content": "import React, { useEffect } from 'react'; import Link from 'next/link'; import Image from 'next/image'; import styles from './Events.module.css'; function Events() { const pastEvents = [ { id: 3, title: \"I.R.I.S. Ice Breaker 2025\", image: \"/icebreaker.jpeg\", date: \"2025-01-24\", description: \"The IRIS Ice Breaker 2025 brought together over 25 members, including new recruits, existing members, and the core team, for a session filled with introductions, interactive games, and team-building activities. A brainstorming discussion encouraged valuable ideas for future events, while fostering enthusiasm and collaboration among participants. The event successfully strengthened relationships, boosted team spirit, and set a positive tone for the year ahead.\", }, { id: 2, title: \"I.R.I.S. Innovation Hackathon 2024\", description: \"We hope you enjoyed the exhilarating event organized by the I.R.I.S. Club!\", image: \"/sephackathon.jpg\", date: \"9/28/2024\", highlights: [ \"The I.R.I.S. Innovation Hackathon gathered enthusiastic participants competing for exciting prizes, including ₹36,000 in BharatGo vouchers for the top three teams.\", \"The event offered valuable networking opportunities, allowing attendees to connect with industry leaders and fellow innovators.\", \"This collaborative environment fostered teamwork and creativity, leading to innovative solutions to real-world challenges.\", ], conclusion: \"Thank you for joining us and contributing to a dynamic event that fuels creativity and innovation!\", }, { id: 1, title: \"Innovation Hackathon\", description: \"The Inter-Campus Open Innovation Hackathon, organized by ASPIRE with Engineer's Cradle, I.R.I.S. and MIT-TBI, gathered Pune students. Teams of up to two registered online and competed at their colleges. The top three teams advanced to the finals at MIT-WPU, where they built prototypes, received mentorship, and pitched to experts. Exciting prizes included cash rewards and funding opportunities.\", image: \"/past-innovation-hackathon.jpg\", date: \"2024-02-15\", }, ]; pastEvents.sort((a, b) => new Date(b.date) - new Date(a.date)); const podcast = { id: 1, title: \"I.R.I.S. Podcast\", description: \"Our latest podcast episode\", image: \"/podcast1.jpg\", date: \"2024-03-14\", length: \"Length: 21 mins 02 secs\", }; useEffect(() => { const hash = window.location.hash; if (hash) { const element = document.querySelector(hash); if (element) { element.scrollIntoView({ behavior: 'smooth' }); } } }, []); return ( Events Upcoming Events Stay tuned for more upcoming exciting events! Past Events {pastEvents.map((event) => ( {event.title} Held on: {new Date(event.date).toLocaleDateString('en-GB')} {event.description} {event.highlights && ( {event.highlights.map((highlight, index) => ( {highlight} ))} )} {event.conclusion && {event.conclusion}} Click to know more ))} Podcasts {podcast.title} {podcast.description} {podcast.date} | {podcast.length} Listen now ); } export default Events;",
    "questions": [
      "Tell me about index",
      "What is on the index page",
      "index information"
    ]
  },
  {
    "route": "d:\\Kushagra\\Programming\\IRIS MIT WPU\\I.R.I.S-nextjs\\pages\\gallery\\index",
    "content": "import { Carousel } from '../../src/components/Carousel'; import styles from './Gallery.module.scss'; import galleryData from './galleryData.json'; const Gallery = () => { return ( Gallery These are all the amazing photos that were taken at our events {Object.entries(galleryData).map(([heading, data]) => { const [title, description] = heading.split('-'); return ( {title} {description} ); })} ); }; export default Gallery;",
    "questions": [
      "Tell me about index",
      "What is on the index page",
      "index information"
    ]
  },
  {
    "route": "d:\\Kushagra\\Programming\\IRIS MIT WPU\\I.R.I.S-nextjs\\pages\\Home",
    "content": "// import React from 'react'; import Link from 'next/link'; import React, { useState, useEffect } from 'react'; import styles from './Home.module.css'; import Image from 'next/image'; import { useInView } from 'react-intersection-observer'; function Home() { // Create separate refs and inView flags for each container const { ref: refProjects, inView: inViewProjects } = useInView({ triggerOnce: true, threshold: 0.5 }); const { ref: refEvents, inView: inViewEvents } = useInView({ triggerOnce: true, threshold: 0.5 }); const { ref: refBlogs, inView: inViewBlogs } = useInView({ triggerOnce: true, threshold: 0.5 });`` // Remove the scroll listener that queried all elements at once. // Each container now has its own Intersection Observer reference. const section1 = [ { title: \"TARZAN\", description: \"Revolutionizing Autonomous Vehicle Navigation.\\nAn innovative system using computer vision to enhance autonomous vehicle control.\", link: \"/blog\", image: \"/simulation.jpg\", }, { title: \"Security Breach We Overcame\", description: \"Our journey in building a platform for collaboration, hackathon management and seamless user experience.\", link: \"/blog\", image: \"/db.jpg\", }, { title: \"CRISPR: Revolutionizing Genetics\", description: \"CRISPR technology is revolutionizing genetics by enabling precise gene editing, unlocking new possibilities in medicine, agriculture, and biotechnology.\", link: \"/blog\", image: \"/crispr-img.png\", }, { title: \"Application of Nanotechnology in Defence Sector\", description: \"Revolutionizing Defense: The Power of Nanotechnology in Military Advancements.\", link: \"/blog\", image: \"/nanotech3.png\", }, { title: \"Traditional Algorithms vs. Machine Learning\", description: \"A comprehensive dive into the definition, use cases, efficiency, positives and negatives.\", link: \"/blog\", image: \"/ai.png\", }, ]; const section2 = [ { title: \"I.R.I.S. Innovation Hackathon 2024\", description: \"Held on: 9/28/2024\", link: \"/events\", image: \"/sephackathon.jpg\", }, { title: \"Innovation Hackathon\", description: \"Held on: 2/15/2024\", link: \"/events\", image: \"/past-innovation-hackathon.jpg\", }, { title: \"I.R.I.S. Ice Breaker 2025\", description: \"Held on: 1/24/2025\", link: \"/events\", image: \"/icebreaker.jpeg\", } ]; const section3 = [ { title: \"Club Website\", description: \"A dynamic platform designed to unite our community of innovators, learners, and leaders.\", link: \"/Projects\", image: \"/website_img.png\", }, { title: \"Autonomous Vehicle\", description: \"Tarzan is an innovative, leading-edge autonomous vehicle control system integrating the application of computer vision into vehicular communications.\", link: \"/Projects\", image: \"/simulation.jpg\", }, ]; const [SectionIndex1, setSectionIndex1] = useState(0); const [SectionIndex2, setSectionIndex2] = useState(0); const [SectionIndex3, setSectionIndex3] = useState(0); useEffect(() => { const interval = setInterval(() => { setSectionIndex1((prevIndex) => (prevIndex + 1) % section1.length); }, 5000); return () => clearInterval(interval); }, [section1.length]); useEffect(() => { const interval = setInterval(() => { setSectionIndex2((prevIndex) => (prevIndex + 1) % section2.length); }, 7000); return () => clearInterval(interval); }, [section2.length]); useEffect(() => { const interval = setInterval(() => { setSectionIndex3((prevIndex) => (prevIndex + 1) % section3.length); }, 5000); return () => clearInterval(interval); }, [section3.length]); const handlePrev1 = () => { setSectionIndex1((prevIndex) => prevIndex === 0 ? section1.length - 1 : prevIndex - 1 ); }; const handleNext1 = () => { setSectionIndex1((prevIndex) => (prevIndex + 1) % section1.length); }; const handlePrev2 = () => { setSectionIndex2((prevIndex) => prevIndex === 0 ? section2.length - 1 : prevIndex - 1 ); }; const handleNext2 = () => { setSectionIndex2((prevIndex) => (prevIndex + 1) % section2.length); }; const handlePrev3 = () => { setSectionIndex3((prevIndex) => prevIndex === 0 ? section3.length - 1 : prevIndex - 1 ); }; const handleNext3 = () => { setSectionIndex3((prevIndex) => (prevIndex + 1) % section3.length); }; return ( Your browser does not support the video tag. I.R.I.S. Innovation Research & Intelligence Support Empowering innovation and fostering technological advancements. Your browser does not support the video tag. Join us on the I.R.I.S. Journey Bring Your Idea Transform your concepts into reality with our supportive community. Collaborate and Develop Work with like-minded individuals to refine and expand your projects. Achieve and Launch Bring your innovations to life and make a lasting impact in the tech world. Projects {section3[SectionIndex3].title} {section3[SectionIndex3].description} Know More ‹ › Events {section2[SectionIndex2].title} {section2[SectionIndex2].description} Know More ‹ › Blogs {section1[SectionIndex1].title} {section1[SectionIndex1].description} Know More ‹ › ); } export default Home;",
    "questions": [
      "Tell me about Home",
      "What is on the Home page",
      "Home information"
    ]
  },
  {
    "route": "d:\\Kushagra\\Programming\\IRIS MIT WPU\\I.R.I.S-nextjs\\pages\\index",
    "content": "import React from 'react'; import Contact from './contact'; import Home from './Home'; export default function Index() { return ( ); }",
    "questions": [
      "Tell me about index",
      "What is on the index page",
      "index information"
    ]
  },
  {
    "route": "d:\\Kushagra\\Programming\\IRIS MIT WPU\\I.R.I.S-nextjs\\pages\\pastEvent2",
    "content": "import React, { useState } from 'react'; // import './event2.css'; import Link from 'next/link'; import Image from 'next/image'; const Event2 = () => { const [formData, setFormData] = useState({ team_name: '', leader_name: '', leader_phone: '', leader_email: '', leader_prn: '', leader_branch: '', member2_name: '', member2_phone: '', member2_email: '', member2_prn: '', member2_branch: '', member3_name: '', member3_phone: '', member3_email: '', member3_prn: '', member3_branch: '', member4_name: '', member4_phone: '', member4_email: '', member4_prn: '', member4_branch: '', }); const [errors, setErrors] = useState({}); const handleChange = (e) => { const { name, value } = e.target; setFormData(prevFormData => ({ ...prevFormData, [name]: value })); }; const validate = () => { const newErrors = {}; const phoneRegex = /^\\d{10}$/; const prnRegex = /^\\d{10}$/; const requiredFields = [ 'team_name', 'leader_name', 'leader_phone', 'leader_email', 'leader_prn', 'leader_branch', 'member2_name', 'member2_phone', 'member2_email', 'member2_prn', 'member2_branch', 'member3_name', 'member3_phone', 'member3_email', 'member3_prn', 'member3_branch', 'member4_name', 'member4_phone', 'member4_email', 'member4_prn', 'member4_branch' ]; requiredFields.forEach((key) => { if (formData[key].trim() === '') { newErrors[key] = 'This field is required'; } }); ['leader_prn', 'member2_prn', 'member3_prn', 'member4_prn'].forEach((key) => { if (!prnRegex.test(formData[key])) { newErrors[key] = 'Enter valid PRN'; } }); ['leader_phone', 'member2_phone', 'member3_phone', 'member4_phone'].forEach((key) => { if (!phoneRegex.test(formData[key])) { newErrors[key] = 'Enter valid 10 digits number'; } }); setErrors(newErrors); if (Object.keys(newErrors).length > 0) { const firstErrorField = document.querySelector(`input[name=\"${Object.keys(newErrors)[0]}\"]`); if (firstErrorField) { firstErrorField.scrollIntoView({ behavior: 'smooth', block: 'center' }); } } return Object.keys(newErrors).length === 0; }; const handleSubmit = async (e) => { e.preventDefault(); if (!validate()) { return; } localStorage.setItem('formData', JSON.stringify(formData)); }; return ( Upcoming Event: INNOVATION HACKATHON Dates: September 26-28, 2024 Innovation Hackathon GUIDELINES Innovation Hackathon PPT Template *Registration Fee: INR 250* *If you don't have 4 members then repeat your details* Team Information: {errors.team_name && {errors.team_name}} Leader: {errors.leader_name && {errors.leader_name}} {errors.leader_phone && {errors.leader_phone}} {errors.leader_email && {errors.leader_email}} {errors.leader_prn && {errors.leader_prn}} Save & Proceed to Checkout localStorage.setItem('formData', JSON.stringify(formData))}> Proceed to Checkout ); }; export default Event2;",
    "questions": [
      "Tell me about pastEvent2",
      "What is on the pastEvent2 page",
      "pastEvent2 information"
    ]
  },
  {
    "route": "d:\\Kushagra\\Programming\\IRIS MIT WPU\\I.R.I.S-nextjs\\pages\\pastpaymentCheckout",
    "content": "import React, { useEffect } from 'react'; import { useRouter } from 'next/router'; import supabase from '../src/utils/supabase'; import Image from 'next/image'; import './pastpaymentCheckout.module.css'; const CheckoutPayment = () => { const router = useRouter(); const { formData } = router.query; useEffect(() => { window.scrollTo(0, 0); }, []); const loadScript = (src) => { return new Promise((resolve) => { const script = document.createElement(\"script\"); script.src = src; script.onload = () => resolve(true); script.onerror = () => resolve(false); document.body.appendChild(script); }); }; const handlePayment = async () => { let amount = 250; const res = await loadScript(\"https://checkout.razorpay.com/v1/checkout.js\"); if (!res) { alert(\"Razorpay SDK failed to load. Are you online?\"); return false; } return new Promise((resolve, reject) => { const options = { key: process.env.NEXT_PUBLIC_RAZORPAY_API_KEY, amount: parseInt(amount * 100), currency: \"INR\", name: \"I.R.I.S. MIT WPU\", description: \"Hackathon Registration Fee\", image: \"https://avatars.githubusercontent.com/u/160888318?v=4\", handler: async function (response) { const { razorpay_payment_id } = response; if (razorpay_payment_id) { try { const { data, error } = await supabase .from('event2_registrations') .insert([{ ...formData, razorpay_payment_id, created_at: new Date().toISOString() }]); if (error) { console.error('Error inserting data:', error); alert('Error inserting data'); } else { console.log('Registration successful:', data); router.push(`/PaymentSuccess?reference=${razorpay_payment_id}`); } } catch (error) { console.error('Error inserting data:', error); alert('Error inserting data'); } } else { resolve(false); } }, prefill: { name: formData?.leader_prn || \"\", }, notes: { address: \"India\", }, theme: { color: \"#000000\", }, }; const paymentObject = new window.Razorpay(options); paymentObject.on('payment.failed', (response) => { console.error('Payment failed:', response); resolve(false); }); paymentObject.open(); }); }; return ( Invoice *Please DO NOT Refresh until Payment Successful* Event Registration Fee: INR 250 Taxes: Included Total Amount: INR 250 Pay Now *Terms & Conditions apply* ); }; export default CheckoutPayment;",
    "questions": [
      "Tell me about pastpaymentCheckout",
      "What is on the pastpaymentCheckout page",
      "pastpaymentCheckout information"
    ]
  },
  {
    "route": "d:\\Kushagra\\Programming\\IRIS MIT WPU\\I.R.I.S-nextjs\\pages\\pastPaymentSuccess",
    "content": "import React from 'react'; import { useRouter } from 'next/router'; import Link from 'next/link'; import Image from 'next/image'; import './pastPaymentSuccess.module.css'; const PaymentSuccess = () => { const router = useRouter(); const { reference } = router.query; return ( Payment Successful! Thank you for your payment. You have successfully registered for the Hackathon! Your payment ID is: {reference} *PLEASE NOTE YOUR PAYMENT ID FOR FUTURE REFERENCE* Leader will receive an email shortly. Return to Home ); }; export default PaymentSuccess;",
    "questions": [
      "Tell me about pastPaymentSuccess",
      "What is on the pastPaymentSuccess page",
      "pastPaymentSuccess information"
    ]
  },
  {
    "route": "d:\\Kushagra\\Programming\\IRIS MIT WPU\\I.R.I.S-nextjs\\pages\\policy",
    "content": "import React from 'react'; import Link from 'next/link'; import styles from './policy.module.css'; function Policy() { return ( Our Privacy Policy At I.R.I.S, we are committed to protecting the privacy of our users. This policy explains how we collect, use, and protect your personal data. Information We Collect When you register for our hackathon, we may collect personal information such as your name, email address, contact number, and payment details. We may collect payment details such as credit card numbers or bank information through secure methods provided by our payment processor. We may collect data on how you interact with our website or services, such as pages visited and interaction with event registration forms. Use of Information Your personal information will be used to manage registrations, provide event updates, and handle customer support. Your payment details will be used solely for processing your hackathon participation fee. We may use your email to send important updates, unless you opt out. Data Sharing We share payment information with third-party payment processors. We may disclose personal information if required by law. Data Security We take reasonable measures to protect your personal data. However, no online transaction is 100% secure. Your Rights You may request access to, correction, or deletion of your personal data by contacting us. Third-Party Services Our payment processing is handled by third-party services. Changes to This Policy We may update this policy from time to time. Any changes will be posted here. For more information, contact us at: iris@mitwpu.edu.in ); } export default Policy;",
    "questions": [
      "Tell me about policy",
      "What is on the policy page",
      "policy information"
    ]
  },
  {
    "route": "d:\\Kushagra\\Programming\\IRIS MIT WPU\\I.R.I.S-nextjs\\pages\\portfolio\\BrandonCerejo\\index",
    "content": "import React, { useState } from 'react'; import styles from './BrandonCerejo.module.css'; import Image from 'next/image'; const camelCaseToWords = (text) => { return text.replace(/([a-z])([A-Z])/g, '$1 $2'); }; const skills = { languages: [ { name: 'Python', logo: '/images/python.png' }, { name: 'C', logo: '/images/C.png' }, { name: 'C++', logo: '/images/C++.png' } ], packages: [ { name: 'OpenCV', logo: '/images/opencv.png' }, { name: 'Pandas', logo: '/images/pandas.png' }, { name: 'NumPy', logo: '/images/numpy.png' }, { name: 'TensorFlow', logo: '/images/tensorflow.png' }, { name: 'Seaborn', logo: '/images/seaborn.png'}, { name: 'Scikit-Learn', logo: '/images/scikit.png'}, { name: 'Tkinter', logo: '/images/tkinter.png'}, ], electronics: [ { name: 'Raspberry Pi', logo: '/images/raspberry.jpg' }, { name: 'Arduino', logo: '/images/arduino.png'}, ], webDevelopment: [ { name: 'Next.js', logo: '/images/next.png' }, { name: 'React', logo: '/images/reacg.png' }, { name: 'Node.js', logo: '/images/node.jpeg' }, { name: 'Express.js', logo: '/images/express.png' }, { name: 'HTML', logo: '/images/html.png'}, { name: 'CSS', logo: '/images/css.png'}, { name: 'JavaScript', logo: '/images/js.png'}, { name: 'Bootstrap', logo: '/images/bootstrap.png'} ], bigDataTechnology: [ { name: 'Cloudera', logo: '/images/cloudera.webp' }, { name: 'HDFS', logo: '/images/hdfs.png' }, { name: 'Apache Pig', logo: '/images/pig.png' }, { name: 'Hive', logo: '/images/hive.png' }, { name: 'HBase', logo: '/images/hbase.png'}, { name: 'Apache Spark', logo: '/images/spark.png'} ], databases: [ { name: 'MySQL', logo: '/images/mysql.png' }, { name: 'MongoDB', logo: '/images/mongodb.svg' } ], visualizationTools: [ { name: 'Tableau', logo: '/images/tableau.png' }, { name: 'PowerBI', logo: '/images/poerbi.jpeg' } ] }; const projects = [ { title: 'ForVis - Formula 1 Analytics', points: [ 'Tools used: Apache Spark, HDFS, Machine Learning Models, Scikit-Learn, PyQt5, Dash', 'Developed a dynamic GUI using PyQt5 to visualize Formula 1 race telemetry with real-time and historical data analysis.', 'Multi-driver comparison, lap time analysis & tire strategy insights via interactive dashboards.', 'Integrated FastF1 APIs and stored telemetry in HDFS, achieving a 30% reduction in processing time using Apache Spark.', 'Implemented Random Forest Classification and Linear Regression models for pit stop predictions and optimization of race strategy with an accuracy rate of 86%.', 'Currently, a Kafka-based pipeline is being tested to handle real-time telemetry and analytics.' ], link: 'https://github.com/BrandonCerejo/ForVis-Formula1-Data-Visualization-and-ML-Models', image: '/KushagraProj1.png' }, { title: 'IRIS Website', points: [ 'Tools used: MERN Stack', 'Helped in developing an official website for the club to provide a centralized platform to share IRIS updates, event details, recruitments and resources.', 'Utilized continuous deployment on Vercel with GitHub CI/CD integration.' ], link: 'https://github.com/BrandonCerejo/I.R.I.S-PROD', image: '/website_img.png' }, { title: 'Magic Board- Mathematical Equation Recognition and Calculation', points: [ 'Tools used: OCR, ML Models, SciPy, Sympy, Scikit-Learn, MatPlotLib', 'Developed a Convolutional Neural Network (CNN) model to accurately detect handwritten numbers and basic mathematical operators, trained on a dataset of over 10,000 images.', 'Achieved 98% recognition accuracy for handwritten mathematical equations.', 'Utilized SciPy to compute the solutions for the recognized mathematical equations, enabling real-time calculations.', 'Integrated Matplotlib to visualize the equations as graphs.' ], link: 'https://github.com/BrandonCerejo/Magic-board/tree/third', image: '/BrandonProj1.jpg' }, { title: 'Driver Drowsiness Detection and Alert System', points: [ 'Tools Used: Python, DLib, Raspberry PI', 'Developed a real-time driver drowsiness detection system using the Dlib library, integrated with a Raspberry Pi and a connected camera.', 'Implemented facial landmark detection using Haar cascades and Dlib's pre-trained model to monitor eye aspect ratio (EAR) for prolonged eye closure and lip distance for yawning detection.', 'Achieved over 95% accuracy in detecting drowsiness using advanced facial landmark detection algorithms.', 'Implemented real-time alerts for drowsiness through audio signals and notifications to enhance driver safety.' ], link: 'https://github.com/BrandonCerejo/Driver-Drowsiness-Detection-And-Alert-System', image: '/images/brandonproj1.jpg' }, ]; const experiences = [ { logo: '/logo2.png', company: 'IRIS', role: 'Treasurer and Tech team member', location: 'Pune', date: 'Aug 2024 - Present', description: [ 'Successfully managing the financial operations of the I.R.I.S. club, overseeing budgeting, expense tracking, and fund allocation to ensure smooth execution of club activities and events.', 'Coordinating with higher college authorities to get event budgets approved, presenting comprehensive financial plans and justifications for fund utilization.', 'Collaborating with the technical and non-technical teams to ensure efficient resource allocation, facilitating seamless event organization and execution.', 'Actively engaging with the leadership team to identify new opportunities for club growth and innovation, ensuring financial feasibility and strategic alignment.', 'Worked with a team to develop a website for the club. My main role was focusing on the frontend aspects to ensure an intuitive and user-friendly design.' ], }, ]; const roles = [ { image: '/logo2.png', role: 'IRIS [Student Club, MIT-WPU] - Treasurer', date: 'Aug 2024 - Present', }, { image: '/logo2.png', role: 'IRIS [Student Club, MIT-WPU] - Tech Team Member', date: 'Jan 2024 - Current', }, ]; const achievements = [ 'Hands-on approach to AI for Real-World Applications- Organized by IIT Kharagpur AI4ICPS I HUB Foundation and TCS iON. Completed on: December 6th 2023', 'Data Science and Machine Learning Bootcamp with R- Udemy. Completed on: December 2024', ]; function BrandonCerejo() { const [link, setLink] = useState(\"/bgVid.webm\") return ( Your browser does not support the video tag. Hi, I'm Brandon Cerejo I am a third-year Computer Science Engineering student at MIT-WPU, Pune, with practical experience in Machine Learning, Data Science, IoT, and Web Development. Currently, I serve as the Treasurer of IRIS, a student club at MIT-WPU, where I also contribute as a member of the development team for the IRIS website. I am highly motivated by challenges, eager to learn and developing practical, user-friendly solutions. LinkedIn GitHub brandoncerejo39@gmail.com Experience Projects Skills Roles & Achievements Experience {experiences.map((exp, index) => ( {exp.company} {exp.date} {exp.role} {exp.location} {exp.description.map((desc, idx) => ( {desc} ))} ))} Projects {projects.map((project, index) => ( {project.title} {project.points.map((point, idx) => ( {point} ))} View on GitHub ))} Skills {Object.keys(skills).map((category) => ( {camelCaseToWords(category.charAt(0).toUpperCase()) + camelCaseToWords(category.slice(1))} {skills[category].map((skill) => ( {skill.name} ))} ))} Roles and Certifications Roles {roles.map((roleData, index) => ( {roleData.role} {roleData.date} ))} Certifications {achievements.map((achievement, index) => ( {achievement} ))} ); } export default BrandonCerejo;",
    "questions": [
      "Tell me about index",
      "What is on the index page",
      "index information"
    ]
  },
  {
    "route": "d:\\Kushagra\\Programming\\IRIS MIT WPU\\I.R.I.S-nextjs\\pages\\portfolio\\KushagraSingh\\index",
    "content": "import React, { useState } from 'react'; import styles from './KushagraSingh.module.css'; import Image from 'next/image'; const camelCaseToWords = (text) => { return text.replace(/([a-z])([A-Z])/g, '$1 $2'); }; const skills = { languages: [ { name: 'Python', logo: '/images/python.png' }, { name: 'C', logo: '/images/C.png' }, { name: 'C++', logo: '/images/C++.png' } ], packages: [ { name: 'Torch', logo: '/images/pytorch.jpeg' }, { name: 'OpenCV', logo: '/images/opencv.png' }, { name: 'Pandas', logo: '/images/pandas.png' }, { name: 'NumPy', logo: '/images/numpy.png' }, { name: 'TensorFlow', logo: '/images/tensorflow.png' }, { name: 'Seaborn', logo: '/images/seaborn.png' }, { name: 'Scikit-Learn', logo: '/images/scikit.png' }, { name: 'Tkinter', logo: '/images/tkinter.png' }, { name: 'StreamLit', logo: '/images/stramlit.png' } ], electronics: [ { name: 'Arduino', logo: '/images/arduino.png' }, { name: 'Raspberry Pi', logo: '/images/raspberry.jpg' }, { name: 'STM32', logo: '/images/stm.png' } ], webDevelopment: [ { name: 'Next.js', logo: '/images/next.png' }, { name: 'React', logo: '/images/reacg.png' }, { name: 'Node.js', logo: '/images/node.jpeg' }, { name: 'Express.js', logo: '/images/express.png' }, { name: 'HTML', logo: '/images/html.png' }, { name: 'CSS', logo: '/images/css.png' }, { name: 'JavaScript', logo: '/images/js.png' }, { name: 'Bootstrap', logo: '/images/bootstrap.png' } ], bigDataTechnologies: [ { name: 'Cloudera', logo: '/images/cloudera.webp' }, { name: 'HDFS', logo: '/images/hdfs.png' }, { name: 'Apache Pig', logo: '/images/pig.png' }, { name: 'Hive', logo: '/images/hive.png' }, { name: 'HBase', logo: '/images/hbase.png' }, { name: 'Apache Spark', logo: '/images/spark.png' } ], databases: [ { name: 'MySQL', logo: '/images/mysql.png' }, { name: 'MongoDB', logo: '/images/mongodb.svg' }, { name: 'PostgreSQL', logo: '/images/prostgresql.png' } ], visualizationTools: [ { name: 'Tableau', logo: '/images/tableau.png' } ], softwares: [ { name: 'AutoCAD', logo: '/images/autocad.png' }, { name: 'TinkerCAD', logo: '/images/Tinkercad.png' } ] }; const projects = [ { title: 'Tarzan [Ongoing]', points: [ 'Developing an autonomous vehicle portable module for non-ADAS enabled cars.', 'Uses an app to input images and run custom deep learning models (YOLOv8) to make decisions for car steering angle, acceleration, and braking values.', 'Takes surroundings like other cars, potholes, barricades, etc., to make its decisions.' ], link: 'https://github.com/kushagra-a-singh/Tarzan-I.R.I.S.', image: '/simulation.jpg' }, { title: 'IRIS Website', points: [ 'Developed an official website for the club to provide a centralized platform to share IRIS updates, event details, recruitments and resources.', 'Handling multiple concurrent real-time payments and updating entries for events.', 'Features include event registrations with a payment gateway, dynamic blogging with a voting system and comment section, club project highlights, recruitment and contact forms.', 'Utilized Razorpay SDK, Supabase Database, and continuous deployment on Vercel with GitHub CI/CD integration.' ], link: 'https://github.com/kushagra-a-singh/I.R.I.S-PROD', image: '/website_img.png' }, { title: 'ForVis - Formula 1 Analytics', points: [ 'Developed a dynamic GUI using PyQt5 to visualize Formula 1 race telemetry with real-time and historical data analysis.', 'Integrated FastF1 APIs and stored telemetry in HDFS, achieving a 30% reduction in processing time using Apache Spark.', 'Implemented Random Forest Classification and Linear Regression models for pit stop predictions and race strategy optimization with an 86% accuracy rate.', 'Enabled multi-driver comparison, lap time analysis & tyre strategy insights via interactive dashboards.', 'Currently trying to integrate a Kafka-based pipeline to handle real-time telemetry and analytics.' ], link: 'https://github.com/kushagra-a-singh/ForVis', image: '/KushagraProj1.png' }, { title: 'Driver Safety Monitoring System', points: [ 'Integrated MQ3 alcohol sensor, accelerometer/gyroscope, GPS module, LED screen, GSM module and buzzer into a vehicle’s onboard system using C++ and Arduino.', 'Developed a comprehensive system to monitor driver behavior, detect alcohol presence, and deliver real-time alerts to promote safe driving practices.', 'Enabled timely feedback for enhanced driver safety, utilizing sensors for real-time monitoring and instant notifications.' ], link: 'https://github.com/kushagra-a-singh/Embedded-Arduino-System-for-Car-Road-Safety', image: '/KushagraProj2.jpg' }, ]; const experiences = [ { logo: '/images/info.png', company: 'Infosys Springboard', role: 'ML Project Intern', location: 'Remote', date: 'Oct - Nov 2024', description: [ 'Designed and implemented a handwritten digit recognition application using neural networks (MLP, CNN, LeNet5) for MNIST dataset classification.', 'Developed custom PyTorch models with dropout, activation functions, and convolutional layers for efficient feature extraction and classification.', 'Built an interactive web application using Streamlit to predict digits from uploaded images, with support for model selection and real-time predictions. Achieved 90.04%, 98.93% & 98.95% accuracies respectively for each model on the test dataset.', 'Utilized image preprocessing (grayscale conversion, normalization, resizing) and dataset augmentation for robust model performance.', 'Created a digit visualization tool to save and display images from the MNIST dataset using Matplotlib.', 'Deployed models with pre-trained weights and integrated custom UI design for a seamless user experience during prediction.', ], }, { logo: '/logo2.png', company: 'IRIS', role: 'Technical Head', location: 'Pune', date: 'Aug 2024 - Present', description: [ 'Spearheaded the development of the official I.R.I.S. club website, taking the lead in designing, coding, and deploying it for live hackathon event registrations for 200+ people, integrated with Razorpay payment gateway to enable seamless fee collection.', 'Currently leading and managing the tech team to oversee website updates, changes, & new feature implementations. Provide mentorship and technical guidance while also directly contributing to challenging tasks, such as backend development for the blogging system, voting system authentication, & comment section functionality.', 'Collaborate with faculty and peers to identify and initiate new tech-based projects, fostering innovation within the club.', 'Led the website’s successful deployment during live events, ensuring smooth operation and scalability for real-time registrations and payments.', 'Also developing an autonomous vehicle module for non-ADAS cars using YOLOv8 deep learning models and sensor-based simulations for decision-making and steering control', ], }, ]; const roles = [ { image: '/logo2.png', role: 'IRIS [Student Club, MIT-WPU] - Technical Head', date: 'Aug 2024 - Present', }, { image: '/images/info.png', role: 'Infosys Springboard [Remote] - ML Intern', date: 'Oct 2024 - Dec 2024', }, ]; const achievements = [ 'Smart India Hackathon (SIH) 2024 - Top 25 Finalist : Collaborated with a multidisciplinary team to qualify as one of the top 25 teams in the internal round of SIH 2024. Designed and developed PlantWise, an AI-powered Ayurvedic health companion for disease prediction and natural remedies.', 'HackMITWPU’24 Ideathon - Finalist : Proposed DermDetect, an AI-powered tool for preliminary dermatological diagnosis using image processing for remote consultations and personalized skincare solutions for underserved regions, enhancing early detection and skin condition management.', ]; function KushagraSingh() { const [link, setLink] = useState(\"/bgVid.webm\") return ( Your browser does not support the video tag. Hi, I'm Kushagra Singh I’m a Third Year Computer Science Engineering student at MIT WPU, Pune, with hands-on experience in Machine Learning, Web Development and Embedded Systems & IoT. I’ve interned at Infosys Springboard, and as the Technical Head of the IRIS Tech Club, I lead a team focused on building tech solutions and managing live projects. I’m driven by challenges and always looking for new ways to solve real-world problems with a focus on creating practical and user-centric applications. LinkedIn GitHub kushagraa.n@gmail.com Experience Projects Skills Roles & Achievements Experience {experiences.map((exp, index) => ( {exp.company} {exp.date} {exp.role} {exp.location} {exp.description.map((desc, idx) => ( {desc} ))} ))} Projects {projects.map((project, index) => ( {project.title} {project.points.map((point, idx) => ( {point} ))} View on GitHub ))} Skills {Object.keys(skills).map((category) => ( {camelCaseToWords(category.charAt(0).toUpperCase()) + camelCaseToWords(category.slice(1))} {skills[category].map((skill) => ( {skill.name} ))} ))} Roles and Achievements Roles {roles.map((roleData, index) => ( {roleData.role} {roleData.date} ))} Achievements {achievements.map((achievement, index) => ( {achievement} ))} ); } export default KushagraSingh;",
    "questions": [
      "Tell me about index",
      "What is on the index page",
      "index information"
    ]
  },
  {
    "route": "d:\\Kushagra\\Programming\\IRIS MIT WPU\\I.R.I.S-nextjs\\pages\\portfolio\\SamanyuBhate\\index",
    "content": "import React, { useState } from 'react'; import styles from './SamanyuBhate.module.css'; import Image from 'next/image'; const camelCaseToWords = (text) => { return text.replace(/([a-z])([A-Z])/g, '$1 $2'); }; const skills = { languages: [ { name: 'Python', logo: '/images/python.png' }, { name: 'C', logo: '/images/C.png' }, { name: 'C++', logo: '/images/C++.png' } ], packages: [ { name: 'OpenCV', logo: '/images/opencv.png' }, { name: 'Pandas', logo: '/images/pandas.png' }, { name: 'NumPy', logo: '/images/numpy.png' }, { name: 'TensorFlow', logo: '/images/tensorflow.png' }, ], electronics: [ { name: 'Arduino', logo: '/images/arduino.png' }, { name: 'Raspberry Pi', logo: '/images/raspberry.jpg' }, { name: 'STM32', logo: '/images/stm.png' }, { name: 'ESP', logo: '/images/esp.png' } ], bigDataTechnologies: [ { name: 'Cloudera', logo: '/images/cloudera.webp' }, { name: 'HDFS', logo: '/images/hdfs.png' }, { name: 'Apache Pig', logo: '/images/pig.png' }, { name: 'Hive', logo: '/images/hive.png' }, { name: 'HBase', logo: '/images/hbase.png' }, { name: 'Apache Spark', logo: '/images/spark.png' } ], softwares: [ { name: 'MATLAB', logo: '/images/matlab.jpg' }, { name: 'SolidWorks', logo: '/images/solidworks.webp' } ] }; const projects = [ { title: 'Magic Board', points: [ 'Developed a model trained on a comprehensive dataset of over 10,000 handwritten mathematical equations.', 'Achieved 98% recognition accuracy for handwritten mathematical equations.', 'Utilized SciPy to calculate values from the extracted text of equations.', 'Integrated graphing capabilities to visualize equations using SciPy.' ], link: 'https://github.com/Scient025/Magic-board', image: '/BrandonProj1.jpg' }, { title: 'IRIS Website', points: [ 'Developed an official website for the club to provide a centralized platform to share IRIS updates, event details, recruitments and resources.', 'Utilized Razorpay, Supabase Database, and Vercel for deployment.' ], link: 'https://github.com/IRIS-MITWPU/I.R.I.S-Prod-Website', image: '/website_img.png' }, { title: 'ForVis - Formula 1 Analytics', points: [ 'Developed a dynamic GUI using PyQt5 to visualize Formula 1 race telemetry with real-time and historical data analysis.', 'Integrated FastF1 APIs and stored telemetry in HDFS, achieving a 30% reduction in processing time using Apache Spark.', 'Implemented Random Forest Classification and Linear Regression models for pit stop predictions and race strategy optimization with an 86% accuracy rate.', 'Enabled multi-driver comparison, lap time analysis & tyre strategy insights via interactive dashboards.', 'Currently trying to integrate a Kafka-based pipeline to handle real-time telemetry and analytics.' ], link: 'https://github.com/Scient025/ForVis', image: '/KushagraProj1.png' }, { title: 'Real-Time Parking Management System', points: [ 'Developed a system that takes in a live video feed and allocates parking based on availability.', 'Uses OpenCV and Threading with YOLOv8 for real-time allocation, speeding up the process by 40%.', 'Implemented using CCTV cameras and Raspberry Pi.' ], link: 'https://github.com/Scient025/Driving_Optimization', image: '/TakshProj1.jpg' }, { title: 'River Cleaner Project', points: [ 'Created a live feed via MJPG streamer using a camera interfaced to a Raspberry Pi.', 'Processed images through Roboflow with an object detection model to identify plastic bags and bottles', 'Developed a system to update object counts and activate sensors for river condition data collection.', 'Implemented a conveyor belt to collect floating garbage using a makeshift bin.', 'Completed MQTT publisher and broker setup, camera, and yolov8 integration.' ], link: '', image: '/rpl.png' }, ]; const experiences = [ { logo: '/images/algo.png', company: 'AlgoAnalytics', role: 'Data Science Intern', location: 'Remote', date: 'December 2024 - April 2025', description: [ 'Developed an image classification model using AnoGANs and CNN-based approaches, reducing false positives and improving defect detection.', 'Implemented data augmentation techniques to handle multiple edge cases and enhance model robustness.', 'Worked on model training and report generation to evaluate performance and provide insights.', ], } ]; const roles = [ { image: '/images/algo.png', role: 'AlgoAnalytics - Data Science Intern', date: 'December 2024 - April 2025', }, { image: '/logo2.png', role: 'IRIS [Student Club, MIT-WPU] - Project Head', date: 'Aug 2024 - Present', }, ]; const achievements = [ 'Smart India Hackathon (SIH) 2024- Top 25 Finalist : Collaborated with a multidisciplinary team to qualify as one of the top 25 teams in the internal round of SIH 2024. Designed and developed DopplerEcho, a Radar Based drone detection system to identify and classify drones.' ]; function SamanyuBhate() { const [link, setLink] = useState(\"/bgVid.webm\") return ( Your browser does not support the video tag. Hi, I'm Samanyu Bhate I’m a Third Year Computer Science Engineering student at MIT WPU, Pune. I am currently a Data Science Intern at Algo Analytics and The Techincal Head of the tech club IRIS. My current interests are in: Machine Learning, Computer Vision, Deep Learning. LinkedIn GitHub bhatesamanyu@gmail.com Experience Projects Skills Roles & Achievements Experience {experiences.map((exp, index) => ( {exp.company} {exp.date} {exp.role} {exp.location} {exp.description.map((desc, idx) => ( {desc} ))} ))} Projects {projects.map((project, index) => ( {project.title} {project.points.map((point, idx) => ( {point} ))} View on GitHub ))} Skills {Object.keys(skills).map((category) => ( {camelCaseToWords(category.charAt(0).toUpperCase()) + camelCaseToWords(category.slice(1))} {skills[category].map((skill) => ( {skill.name} ))} ))} Roles and Achievements Roles {roles.map((roleData, index) => ( {roleData.role} {roleData.date} ))} Achievements {achievements.map((achievement, index) => ( {achievement} ))} ); } export default SamanyuBhate;",
    "questions": [
      "Tell me about index",
      "What is on the index page",
      "index information"
    ]
  },
  {
    "route": "d:\\Kushagra\\Programming\\IRIS MIT WPU\\I.R.I.S-nextjs\\pages\\portfolio\\TakshDhabalia\\index",
    "content": "import React, { useState } from 'react'; import styles from './TakshDhabalia.module.css'; import Image from 'next/image'; const camelCaseToWords = (text) => { return text.replace(/([a-z])([A-Z])/g, '$1 $2'); }; const skills = { languages: [ { name: 'Python', logo: '/images/python.png' }, { name: 'C', logo: '/images/C.png' }, { name: 'C++', logo: '/images/C++.png' } ], packages: [ { name: 'Music21', logo: '/images/music21.png' }, { name: 'OpenCV', logo: '/images/opencv.png' }, { name: 'Pandas', logo: '/images/pandas.png' }, { name: 'NumPy', logo: '/images/numpy.png' }, { name: 'TensorFlow', logo: '/images/tensorflow.png' }, { name: 'PyGame', logo: '/images/pygame.png' } ], electronics: [ { name: 'Raspberry Pi', logo: '/images/raspberry.jpg' }, { name: 'Arduino', logo: '/images/arduino.png'}, { name: 'STM32', logo: '/images/stm.png'}, { name: 'Node-RED', logo: '/images/nodered.png' }, { name: 'ESP', logo: '/images/esp.png' } ], protocols: [ { name: 'MQTT', logo: '/images/mqtt.png' }, { name: 'LoRaWAN', logo: '/images/lora.png' }, { name: 'ESP-Now', logo: '/images/espnow.png' }, { name: 'Cellular', logo: '/images/cellular.png' }, { name: 'NB-IoT', logo: '/images/nbiot.png' } ] }; const projects = [ { title: 'Tarzan', points: [ 'Developing an autonomous vehicle portable module for non-ADAS enabled cars.', 'Uses an app to input images and run custom deep learning models (YOLOv8) to make decisions for car steering angle, acceleration, and braking values.', 'Takes surroundings like other cars, potholes, barricades, etc., to make its decisions.', 'Worked on making simulations using MATLAB with pure-pursuit modeling.' ], link: 'https://github.com/TakshDhabalia/TarzanIRIS', image: '/images/tarzan.jpg' }, { title: 'IRIS Website', points: [ 'Developed an official site for the club, handling multiple concurrent real-time payments and updating entries for events.', 'Utilized Razorpay, Supabase Database, and Vercel for deployment.' ], link: 'https://github.com/kushagra-a-singh/I.R.I.S-PROD', image: '/website_img.png' }, { title: 'Real-Time Parking Management System', points: [ 'Developed a system that takes in a live video feed and allocates parking based on availability.', 'Uses OpenCV and Threading with YOLOv8 for real-time allocation, speeding up the process by 40%.', 'Implemented using CCTV cameras and Raspberry Pi.' ], link: 'https://github.com/TakshDhabalia/Driving_Optimization', image: '/TakshProj1.jpg' }, { title: 'Doom on Web', points: [ 'Achieved a 30% performance improvement in FPS and a 10% improvement on web platforms by implementing core algorithms natively.', 'Leverages Ray-Casting for its core engine algorithm and uses BFS and DFS for NPC algorithms.', 'Developing multiplayer and squad-up features (WIP).' ], link: 'https://github.com/TakshDhabalia/Doom', image: '/TakshProj2.jpg' }, { title: 'Music_Gen', points: [ 'Produced music from input using LSTMs in real-time.', 'Utilized open-source KERN datasets for German songs to generate unique melodies based on the input provided, giving continuations of them as a result.' ], link: 'https://github.com/TakshDhabalia/Research-and-MusicGeneration', image: '/music.jpeg' } ]; const experiences = [ { logo: '/images/iiitd.png', company: 'IIIT-Delhi', role: 'System Design and Embedded Software Developer Intern', location: 'Delhi', date: 'Jan - Aug 2024', description: [ 'Designed and implemented a water management system with an app and cloud integration.', 'Developed the overall hardware and cloud architecture, deployed on STM32 micro controllers.', 'Developed the entire app for the project written in Dart using the Flutter framework. Used Firebase for the backend.', 'Demonstrated skills in micro-controller architecture, low-level embedded systems programming, system design and architecture, PCB designing, and Flutter development.', ], }, { logo: '/images/bolt.jpeg', company: 'Team Bolt', role: 'Vice Lead, Electronics', location: 'Pune', date: 'June 2023 - Jan 2024', description: [ 'Secured All India Rank 4 in FMAE Moto Student India - Electric Superbike Building Competition and overall rank 2 in cost report and endurance test.', 'Led the innovations and electronics department, developing 4 new innovations including GPS tracking and SOS impact sensors.', 'Contributed to wiring and circuitry for GLVS and HVS systems.', ], }, ]; const roles = [ { image: '/logo2.png', role: 'IRIS [Student Club, MIT-WPU] - President', date: 'June 2024-Current', }, { image: '/images/bolt.jpeg', role: 'Team Bolt [Student Club, MIT-WPU] - Vice-Lead for Innovations and Electronics', date: '2022-2024', }, ]; const achievements = [ 'All India Rank 4 in FMAE Moto Student India.', 'Rank 2 in Cost report and Endurance test in FMAE Moto Student India', ]; function TakshDhabalia() { const [link, setLink] = useState(\"/bgVid.webm\") return ( Your browser does not support the video tag. Hi, I'm Taksh Dhabalia A third year student at MIT WPU, Pune. I have worked as an intern at IIIT-D and am the current President of the tech club IRIS. I have also been the vice-lead for innovations and electronics at Team Bolt where we have secured AIR 4 in MOTO STUDENT INDIA - superbike manufacturing and design competition. My current interests are Microcontrollers, Electronics & electrical, Distributed Systems and ML & DL in computer vision. LinkedIn GitHub taksh.dhabalia@gmail.com Experience Projects Skills Roles & Achievements Experience {experiences.map((exp, index) => ( {exp.company} {exp.date} {exp.role} {exp.location} {exp.description.map((desc, idx) => ( {desc} ))} ))} Projects {projects.map((project, index) => ( {project.title} {project.points.map((point, idx) => ( {point} ))} View on GitHub ))} Skills {Object.keys(skills).map((category) => ( {camelCaseToWords(category.charAt(0).toUpperCase()) + camelCaseToWords(category.slice(1))} {skills[category].map((skill) => ( {skill.name} ))} ))} Roles and Achievements Roles {roles.map((roleData, index) => ( {roleData.role} {roleData.date} ))} Achievements {achievements.map((achievement, index) => ( {achievement} ))} ); } export default TakshDhabalia;",
    "questions": [
      "Tell me about index",
      "What is on the index page",
      "index information"
    ]
  },
  {
    "route": "d:\\Kushagra\\Programming\\IRIS MIT WPU\\I.R.I.S-nextjs\\postcss.config.js",
    "content": "module.exports = { plugins: { tailwindcss: {}, autoprefixer: {}, }, }",
    "questions": [
      "Tell me about postcss.config",
      "What is on the postcss.config page",
      "postcss.config information"
    ]
  },
  {
    "route": "d:\\Kushagra\\Programming\\IRIS MIT WPU\\I.R.I.S-nextjs\\pages\\projects\\1\\index",
    "content": "import React from 'react'; import Link from 'next/link'; import styles from './Projects1.module.css'; const Projects1 = () => { return ( I.R.I.S. Club Website ABOUT OUR WEBSITE The I.R.I.S. club website is a dynamic platform designed to unite our community of innovators, learners, and leaders. Acting as a central hub, it provides essential information about events, announcements, and achievements while facilitating communication with members, alumni, and external partners. The site not only showcases our events and podcast episodes but also serves as a vital resource for attracting new members and enhancing our visibility on campus. This website consolidates all details about I.R.I.S. for sponsors, partners, teachers, and participants in our workshops and hackathons. It highlights our collective work, including research, projects, and past events, fostering collaboration and engagement. By promoting events and offering seamless registration, the I.R.I.S. website boosts participation and streamlines operations, while connecting members with external groups. Ultimately, it supports our community by providing information and opportunities for involvement in various activities, such as hackathons, seminars, and podcasts. WEBSITE FEATURES Event Management: Displays upcoming and past events with registration options. Podcasts: Showcases podcasts related to events and industry trends. Payment Integration: Razorpay gateway for smooth event registrations. Responsive Design: Mobile-friendly with Bootstrap-based layout. Dynamic Content: Regular updates to reflect the latest activities and members. PLAN & RESEARCH Our team planned intensively in order to make sure a smooth development process for the website. Our team held multiple meetings spanned across a few weeks to finalize the plan and to research. DEVELOPMENT The development was done by using multiple technologies which were: React JS: React JS is the library on which I.R.I.S’s website is made. Bootstrap: Bootstrap is a very popular CSS framework that we used to make I.R.I.S Website more responsive in multiple types of screens and displays. Razorpay: Razorpay is a payment gateway API which is used to handle online payments for the hackathon and our future ventures and events. Github: Github is an industry standard service used for version controlling and collaboration. Our team used github throughout the production phase to collaborate with everyone Supabase SQL: Supabase SQL is a powerful database which is highly scalable & secure. We use it to store the data of our users securely. DEPLOYMENT We have used Vercel to deploy frontend because of their easy deployment and seamless integration with github. Stay Connected 📩 If you're interested in participating in this project or have any questions, feel free to reach out to us! Recruitment form Project Github Link Project Repository ); }; export default Projects1;",
    "questions": [
      "Tell me about index",
      "What is on the index page",
      "index information"
    ]
  },
  {
    "route": "d:\\Kushagra\\Programming\\IRIS MIT WPU\\I.R.I.S-nextjs\\pages\\projects\\2\\index",
    "content": "import React from 'react'; import Link from 'next/link'; import styles from './Projects2.module.css'; function Projects2() { return ( Tarzan Project Advanced Autonomous Vehicle Control System using YOLO Detection and CAN Bus Tarzan is an innovative, leading-edge autonomous vehicle control system integrating the application of computer vision into vehicular communications. Under the system, it works based on object detection provided by running YOLOv8 on a streaming set up from mobile-to-laptop, processing video feeds directly from cameras. This processes real-time views for detection of road condition, obstacle, and threat. This visual intelligence is married to a highly developed CAN bus communication system, built around STM32 microcontrollers, allowing interaction directly with vehicle control systems through the OBD-II interface. What sets this device apart is its hybrid approach - combining temporary actuator-based testing capabilities and long-term vision of the implementation of custom PCB boards in production environments. Whether in its current development with mobile camera inputs and actuator-based control or at its intended maturity level of fully integrated CAN bus messaging, Tarzan is an important advance toward making the technology available and deployable for autonomous vehicles in all vehicle platform types. Vision System Architecture The vision system leverages advanced YOLOv8 architecture optimized for automotive applications. Our implementation processes real-time camera feeds from mobile devices through an innovative IP Webcam setup, achieving consistent 30+ FPS performance with sub-100ms latency. The system excels in detecting road hazards, obstacles, and navigation markers under varying environmental conditions, thanks to extensive custom training and sophisticated post-processing algorithms. Key Capabilities: Real-time object detection and tracking Advanced image stabilization Adaptive quality control Multi-object classification Technical Specifications The system is meticulously designed to identify key elements essential for safe and efficient navigation. Its advanced detection capabilities include recognizing road obstacles and potential hazards that could disrupt a vehicle's path. Additionally, it accurately detects lane markings and boundaries, ensuring the vehicle remains within safe limits. The system is also equipped to identify traffic signs and signals, allowing it to respond promptly to regulatory changes on the road. Furthermore, the technology can detect dynamic obstacles, such as other vehicles and pedestrians, enhancing situational awareness and promoting a safer driving environment. Road obstacles and hazards Lane markings and boundaries Traffic signs and signals Dynamic obstacles and pedestrians Our optimized processing pipeline supports the system's real-time operational requirements with precision and speed. It begins with a frame pre-processing and normalization phase, which prepares visual data for consistent interpretation across various lighting and environmental conditions. Multi-scale detection algorithms are then applied, enabling the system to recognize objects at different sizes and distances accurately. Custom post-processing filters refine these detections, minimizing false positives and enhancing overall reliability. Finally, real-time data streaming protocols are implemented to facilitate immediate data transfer, ensuring the system remains responsive and efficient in all operational contexts. Frame pre-processing and normalization Multi-scale detection algorithms Custom post-processing filters Real-time data streaming protocols Stay Connected 📩 If you're interested in participating in this project or have any questions, feel free to reach out to us! Recruitment form Project GitHub Link Github Repository ); }; export default Projects2;",
    "questions": [
      "Tell me about index",
      "What is on the index page",
      "index information"
    ]
  },
  {
    "route": "d:\\Kushagra\\Programming\\IRIS MIT WPU\\I.R.I.S-nextjs\\pages\\Projects",
    "content": "import React, { useEffect } from 'react'; import Link from 'next/link'; import Image from 'next/image'; import styles from './Projects.module.css'; function Projects() { const ongoingTechnicalProject = { id: 1, title: \"Club Website\", }; const ongoingTechnicalProject2 = { id: 2, title: \"Autonomous Vehicle\", }; useEffect(() => { const hash = window.location.hash; if (hash) { const element = document.querySelector(hash); if (element) { element.scrollIntoView({ behavior: 'smooth' }); } } }, []); return ( Projects Ongoing Technical Projects {[ongoingTechnicalProject].map((project) => ( {project.title} {project.description} Click to Know More! ))} {[ongoingTechnicalProject2].map((project) => ( {project.title} {project.description} Click to Know More! ))} ); } export default Projects;",
    "questions": [
      "Tell me about Projects",
      "What is on the Projects page",
      "Projects information"
    ]
  },
  {
    "route": "d:\\Kushagra\\Programming\\IRIS MIT WPU\\I.R.I.S-nextjs\\pages\\recruitments\\index",
    "content": "import React, { useState, useRef } from \"react\"; import supabase from '../../src/utils/supabase'; import styles from \"./recruitment.module.css\"; // import \"bootstrap/dist/css/bootstrap.min.css\"; import Select from \"react-select\"; function Recruitment() { const [link, setLink] = useState(\"/bgVid.webm\") const [formData, setFormData] = useState({ name: \"\", prn: \"\", interests: \"\", domain: [], email: \"\", phone: \"\", file: null, school: \"\", branch: \"\", currentYear: \"\", experience: \"\", contribution: \"\" }); const [formErrors, setFormErrors] = useState({ name: \"\", prn: \"\", email: \"\", phone: \"\", school: \"\", branch: \"\", currentYear: \"\", domain: \"\", file: \"\", interests: \"\", experience: \"\", contribution: \"\", }); const [showNotification, setShowNotification] = useState(false); const fileInputRef = useRef(null); const schoolsList = [ \"WPU School of Economics and Commerce\", \"Ramcharan School of Leadership\", \"WPU School of Business\", \"Faculty of Governance\", \"WPU School of Engineering and Technology\", \"WPU School of Consciousness\", \"WPU School of Law\", \"Department of Liberal Arts\", \"Department of Biosciences and Technology\", \"Department of Pharmaceutical Science\", \"Department of Visual Arts\", \"Department of Design\", \"WPU School of Photography\", \"WPU School of Computer Science and Engineering\", \"WPU School of Science & Environmental Studies\", \"Others\" ]; const uniqueSchools = [...new Set(schoolsList)]; const validatePhone = (phone) => /^[0-9]{10}$/.test(phone); const validatePrn = (prn) => /^[0-9]{10}$/.test(prn); const validateEmail = (email) => /^(.*@gmail\\.com|.*@mitwpu\\.edu\\.in)$/.test(email); const domainOptions = [ { label: 'Tech', options: [ { value: 'Tarzan', label: 'TARZAN - Autonomous Vehicle Project' }, { value: 'Website', label: 'I.R.I.S. Website - Development & Updates' } ] }, { label: 'Non-tech', options: [ { value: 'content-writing', label: 'Content Writing (Blogs, Research Papers)' }, { value: 'content-creation', label: 'Content Creation (Video Creation, Video Hosting)' }, { value: 'photo-editor', label: 'Photo Editor' }, { value: 'video-editor', label: 'Video Editor' }, { value: 'graphic-artist', label: 'Graphic Artist' }, { value: '3d-modelling-artist', label: '3D Modelling Artist/Animator' }, { value: 'poster-design', label: 'Poster Design (Events, Workshops)' }, { value: 'story-post-design', label: 'Story and Post Design (Instagram, LinkedIn)' }, { value: 'banner-design', label: 'Banner Design (Events, Workshops)' }, { value: 'event-ops', label: 'Event and Ops (Event Management)' }, { value: 'marketing', label: 'Marketing' }, { value: 'sponsorship-outreach', label: 'Sponsorship and Outreach' } ] } ]; const customSingleValue = ({ data }) => ( {data.label} ); const customStyles = { groupHeading: (provided) => ({ ...provided, fontWeight: 'bold', fontSize: '16px', color: '#333', }), option: (provided) => ({ ...provided, fontWeight: 'normal', fontSize: '14px', }) }; const handleChange = (e) => { const { name, value } = e.target; if (name === \"file\") { const file = e.target.files[0]; if (file && file.size > 200 * 1024) { setFormErrors({ ...formErrors, file: \"File size should not exceed 200 kB\" }); return; } else { setFormErrors({ ...formErrors, file: \"\" }); } setFormData({ ...formData, file }); } else { setFormData({ ...formData, [name]: value }); setFormErrors({ ...formErrors, [name]: \"\" }); } }; const handleDomainChange = (selectedOptions) => { const selectedDomainValues = selectedOptions ? selectedOptions.map(option => option.value) : []; setFormData(prevData => ({ ...prevData, domain: selectedDomainValues })); }; const handleSubmit = async (e) => { e.preventDefault(); const newErrors = {}; let formIsValid = true; Object.keys(formData).forEach((field) => { if (!formData[field] && field !== \"file\" && field !== \"domain\") { newErrors[field] = `${field.charAt(0).toUpperCase() + field.slice(1)} is required.`; formIsValid = false; } }); if (!formData.domain || formData.domain.length === 0) { newErrors.domain = \"Please select at least one domain.\"; formIsValid = false; } if (!validatePhone(formData.phone)) { newErrors.phone = \"Please enter a valid Phone number.\"; formIsValid = false; } if (!validatePrn(formData.prn)) { newErrors.prn = \"Please enter a valid PRN.\"; formIsValid = false; } if (!validateEmail(formData.email)) { newErrors.email = \"Please enter a valid email address.\"; formIsValid = false; } if (!formData.experience) { newErrors.experience = \"Experience in your area of interest is required.\"; formIsValid = false; } if (!formData.contribution) { newErrors.contribution = \"This field is required.\"; formIsValid = false; } if (formData.file && !formData.file.name.endsWith(\".pdf\")) { newErrors.file = \"Please upload a valid PDF resume.\"; formIsValid = false; } setFormErrors(newErrors); if (!formIsValid) { const firstErrorField = Object.keys(newErrors)[0]; const firstErrorElement = document.getElementById(firstErrorField); if (firstErrorElement) { firstErrorElement.scrollIntoView({ behavior: \"smooth\", block: \"center\" }); } return; } const fileUrl = formData.file ? await uploadFile(formData.file) : null; const { error: insertError } = await supabase .from('recruitment_forms') .insert([{ name: formData.name, prn: formData.prn, email: formData.email, phone: formData.phone, domain: formData.domain, interests: formData.interests, experience: formData.experience, contribution: formData.contribution, cv_url: fileUrl, school: formData.school, branch: formData.branch, current_year: formData.currentYear }]); if (insertError) { setFormErrors({ ...formErrors, form: \"Error submitting form: \" + insertError.message }); return; } setShowNotification(true); setFormData({ name: \"\", prn: \"\", interests: \"\", domain: [], email: \"\", phone: \"\", file: null, contribution: \"\", experience: \"\", school: \"\", branch: \"\", currentYear: \"\" }); fileInputRef.current.value = null; }; const uploadFile = async (file) => { const filePath = `cvs/${formData.name}-${Date.now()}.pdf`; const { data, error: uploadError } = await supabase .storage .from('cv_bucket') .upload(filePath, file); if (uploadError) { setFormErrors({ ...formErrors, file: \"Error uploading file: \" + uploadError.message }); return null; } return supabase.storage.from('cv_bucket').getPublicUrl(data.path).publicURL; }; const handleOkayButton = () => { setShowNotification(false); }; // const [backgroundVideo, setLink] = useState(\"/bgVid.webm\") return ( Your browser does not support the video tag. Club Recruitment Form Fill out the below recruitment form to join I.R.I.S. Name* {formErrors.name && {formErrors.name}} PRN* {formErrors.prn && {formErrors.prn}} Email* {formErrors.email && {formErrors.email}} Phone Number* {formErrors.phone && {formErrors.phone}} School* Choose a school {uniqueSchools.map((school, index) => ( {school} ))} {formErrors.school && {formErrors.school}} Branch* {formErrors.branch && {formErrors.branch}} Current Year* Choose your year 1st Year 2nd Year 3rd Year 4th Year {formErrors.currentYear && {formErrors.currentYear}} Select Domain(s)* ({ value, label: domainOptions .flatMap(group => group.options) .find(option => option.value === value)?.label }))} onChange={handleDomainChange} components={{ SingleValue: customSingleValue }} className=\"react-select-container\" classNamePrefix=\"react-select\" styles={customStyles} /> {formErrors.domain && {formErrors.domain}} Resume or CV (OPTIONAL) {formErrors.file && {formErrors.file}} What are your area of interests?* {formErrors.interests && {formErrors.interests}} Any past experiences in your area of interest?* {formErrors.experience && {formErrors.experience}} Why do you want to join IRIS and how will you be able to contribute?* {formErrors.contribution && {formErrors.contribution}} Submit {showNotification && ( Thank you for registering! Your form has been successfully submitted. Okay )} ); } export default Recruitment;",
    "questions": [
      "Tell me about index",
      "What is on the index page",
      "index information"
    ]
  },
  {
    "route": "d:\\Kushagra\\Programming\\IRIS MIT WPU\\I.R.I.S-nextjs\\pages\\refund",
    "content": "import React from 'react'; import styles from './refund.module.css'; function Refund() { return ( Refund Policy At I.R.I.S, we want to ensure that you are satisfied with our services. If you are not satisfied, we offer a refund policy. Eligibility for Refunds Full Refund: Participants are eligible for a full refund if they cancel their registration 7 days before the hackathon start date. No Refunds: No refunds will be issued for cancellations made less than 7 days before the hackathon start date or for participants who do not attend the event. Refund Process Request Submission: To request a refund, participants must contact us via email at iris@mitwpu.edu.in with their registration details. Processing Time: Refunds will be processed within 15-20 days after the request is received and approved. The refunded amount will be returned to the original payment method used during registration. Event Cancellation or Postponement In the event that the hackathon is canceled or postponed by I.R.I.S, participants will be eligible for a full refund. Alternatively, participants may opt to transfer their registration to a future event organized by I.R.I.S. Non-Refundable Fees Transaction processing fees incurred through third-party payment processors are non-refundable unless the event is canceled by I.R.I.S. Changes to This Policy We reserve the right to modify this refund policy at any time. Any changes will be communicated to participants via email and updated on our website. For more information, contact us at: iris@mitwpu.edu.in ); } export default Refund;",
    "questions": [
      "Tell me about refund",
      "What is on the refund page",
      "refund information"
    ]
  },
  {
    "route": "d:\\Kushagra\\Programming\\IRIS MIT WPU\\I.R.I.S-nextjs\\tailwind.config.js",
    "content": "module.exports = { content: [ './pages/**/*.{js,ts,jsx,tsx}', './src/components/**/*.{js,ts,jsx,tsx}', ], theme: { extend: {}, }, plugins: [], }",
    "questions": [
      "Tell me about tailwind.config",
      "What is on the tailwind.config page",
      "tailwind.config information"
    ]
  },
  {
    "route": "d:\\Kushagra\\Programming\\IRIS MIT WPU\\I.R.I.S-nextjs\\pages\\terms",
    "content": "import React from 'react'; import styles from './terms.module.css'; function Terms() { return ( Terms and Conditions By using our website, you agree to these terms and conditions. Please read them carefully before using our website. Eligibility To participate in I.R.I.S activities, you must be at least 16 years old or have parental consent if under 16. By participating, you confirm that you meet these eligibility requirements. Code of Conduct All participants must adhere to our Code of Conduct. This includes respectful behavior towards others, compliance with all event rules, and avoiding any form of harassment or discrimination. Use of Our Website You must use our website for lawful purposes only. You must not use our website to harm or offend others. Intellectual Property All content on our website is owned by us or our licensors. You must not copy, modify, or distribute our content without our permission. Any intellectual property created during I.R.I.S activities remains the property of the creator. By participating, you grant I.R.I.S a non-exclusive license to use your work for promotional purposes. Liability We are not liable for any damages or losses arising from your use of our website. We are not responsible for any third-party content or services. I.R.I.S is not liable for any direct, indirect, incidental, or consequential damages arising from your participation in our activities or use of our services. Privacy Policy Your privacy is important to us. Please review our Privacy Policy to understand how we collect, use, and protect your personal information. Changes to Terms We may update these Terms and Conditions from time to time. Any changes will be posted on our website, and your continued use of our services constitutes acceptance of the new terms. Governing Law These Terms and Conditions are governed by and construed in accordance with the laws of India. Any disputes arising from these terms will be resolved in the courts of India. Contact Us If you have any questions or concerns about these Terms and Conditions, please contact us at iris@mitwpu.edu.in. Address: MIT World Peace University, Survey No. 124, Paud Rd, Kothrud, Pune, Maharashtra 411038 ); } export default Terms;",
    "questions": [
      "Tell me about terms",
      "What is on the terms page",
      "terms information"
    ]
  },
  {
    "route": "d:\\Kushagra\\Programming\\IRIS MIT WPU\\I.R.I.S-nextjs\\src\\components\\Carousel",
    "content": "import { useEffect, useState, useCallback } from 'react'; import Image from 'next/image'; import styles from './Carousel.module.css'; import { BsArrowLeftCircleFill, BsArrowRightCircleFill } from 'react-icons/bs'; export const Carousel = ({ data }) => { const [slide, setSlide] = useState(0); const autoCarouselSlideInterval = 4000; const nextSlide = useCallback(() => { setSlide(slide === data.length - 1 ? 0 : slide + 1); }, [slide, data.length]); const prevSlide = useCallback(() => { setSlide(slide === 0 ? data.length - 1 : slide - 1); }, [slide, data.length]); useEffect(() => { const autoSlide = setInterval(() => { nextSlide(); }, autoCarouselSlideInterval); return () => { clearInterval(autoSlide); }; }, [nextSlide]); return ( {data && Array.isArray(data) && data.map((item, index) => ( ))} {data.map((_, idx) => ( setSlide(idx)} className={`${styles.indicator} ${ slide === idx ? '' : styles.indicatorInactive }`} > ))} ); };",
    "questions": [
      "Tell me about Carousel",
      "What is on the Carousel page",
      "Carousel information"
    ]
  },
  {
    "route": "d:\\Kushagra\\Programming\\IRIS MIT WPU\\I.R.I.S-nextjs\\src\\components\\chatbot\\Chatbot",
    "content": "import React, { useState, useEffect } from 'react'; import * as tf from '@tensorflow/tfjs'; import { load } from '@tensorflow-models/universal-sentence-encoder'; import localforage from 'localforage'; import { createClient } from '@supabase/supabase-js'; import ChatbotButton from './ChatbotButton'; import ChatWindow from './ChatWindow'; // Import base knowledge import staticKnowledgeBase from './knowledgeBase.json'; // Initialize Supabase client (add your project URL and anon key in your .env.local) const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL || 'https://your-project-url.supabase.co'; const supabaseKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY || 'your-anon-key'; const supabase = createClient(supabaseUrl, supabaseKey); // Initialize the storage const chatbotStore = localforage.createInstance({ name: 'chatbot-store' }); // Predefined responses for common questions const baseKnowledgeBase = [ { questions: ['what is iris', 'who are you', 'about iris'], answer: 'I am the IRIS Assistant! IRIS is the Innovation, Research, Incubation, and Startup team at MIT WPU. We focus on research, innovation, and entrepreneurship.' }, { questions: ['contact', 'how to contact', 'contact information'], answer: 'You can find our contact information on the Contact page. We have various team members you can reach out to for different inquiries.' }, { questions: ['events', 'upcoming events', 'what events'], answer: 'We host various events throughout the year including hackathons, workshops, and tech talks. Check our Events page for the latest information.' }, { questions: ['projects', 'what projects', 'research projects'], answer: 'IRIS works on various innovative projects in fields like AI, robotics, and more. You can explore our Projects page to learn about our current and past projects.' }, { questions: ['blog', 'articles', 'research papers'], answer: 'Our blog features articles on various tech topics, research findings, and event recaps. Visit the Blog section to read our latest posts.' }, { questions: ['team', 'members', 'who works'], answer: 'Our team consists of students, faculty, and industry experts. You can learn more about our members on the About page.' } ]; // Merge knowledge bases const mergeKnowledgeBase = () => { const mergedKB = [...baseKnowledgeBase]; staticKnowledgeBase.forEach(item => { mergedKB.push({ questions: item.questions, answer: `${item.content.substring(0, 200)}... [This information is from the ${item.route} page]` }); }); return mergedKB; }; const Chatbot = () => { const [isOpen, setIsOpen] = useState(false); const [messages, setMessages] = useState([ { sender: 'bot', text: 'Hello! I\\'m the IRIS Assistant. How can I help you today?', isNew: true } ]); const [model, setModel] = useState(null); const [modelLoading, setModelLoading] = useState(false); const [knowledgeBase, setKnowledgeBase] = useState([]); // Initialize knowledge base useEffect(() => { setKnowledgeBase(mergeKnowledgeBase()); }, []); // Toggle chat open/closed const toggleChat = () => { setIsOpen(!isOpen); if (!model && !modelLoading) { loadModel(); } }; // Load the NLP model const loadModel = async () => { try { setModelLoading(true); const loadedModel = await load(); setModel(loadedModel); setModelLoading(false); } catch (error) { console.error('Error loading model:', error); setModelLoading(false); setMessages(prev => [ ...prev, { sender: 'bot', text: 'I\\'m having trouble loading my brain. Please try again in a moment!', isNew: true } ]); } }; // Calculate similarity between two sentences const calculateSimilarity = async (sentence1, sentence2) => { if (!model) return 0; try { const embeddings = await model.embed([sentence1.toLowerCase(), sentence2.toLowerCase()]); const embed1 = embeddings.slice([0, 0], [1, -1]); const embed2 = embeddings.slice([1, 0], [1, -1]); const dotProduct = embed1.matMul(embed2, false, true); const norm1 = embed1.norm(); const norm2 = embed2.norm(); const similarity = dotProduct.div(norm1.mul(norm2)); return similarity.dataSync()[0]; } catch (error) { console.error('Error calculating similarity:', error); return 0; } }; // Find the best match for a user query const findBestResponse = async (query) => { if (query.toLowerCase() === 'exit') { setIsOpen(false); return ''; } let bestMatch = null; let highestSimilarity = 0; for (const item of knowledgeBase) { for (const question of item.questions) { const similarity = await calculateSimilarity(query, question); if (similarity > highestSimilarity && similarity > 0.5) { highestSimilarity = similarity; bestMatch = item.answer; } } } // Log this interaction to Supabase for analytics try { await supabase.from('chatbot_interactions').insert([ { query, best_match: bestMatch, similarity_score: highestSimilarity, timestamp: new Date().toISOString() } ]); } catch (error) { console.error('Error logging interaction:', error); } if (bestMatch) { return bestMatch; } return \"I'm not sure about that. Can you try asking something about our projects, events, or team?\"; }; // Handle sending a message const handleSendMessage = async (text) => { if (text === 'exit') { setIsOpen(false); return; } // Add user message setMessages(prev => [...prev, { sender: 'user', text, isNew: true }]); // Add typing indicator setMessages(prev => [...prev, { sender: 'bot', text: '...' }]); // Get response let response; if (model) { response = await findBestResponse(text); } else { response = \"I'm still loading my knowledge. Please try again in a moment!\"; loadModel(); } // Replace typing indicator with actual response setMessages(prev => [ ...prev.slice(0, prev.length - 1), { sender: 'bot', text: response, isNew: true } ]); // After a while, mark message as not new (for animation purposes) setTimeout(() => { setMessages(prev => prev.map(msg => msg.isNew ? { ...msg, isNew: false } : msg) ); }, 1000); }; // Handle feedback const handleFeedback = async (messageIndex, isPositive) => { if (messages[messageIndex].sender !== 'bot') return; // Get the user query (should be the message before this one) const userQuery = messageIndex > 0 && messages[messageIndex - 1].sender === 'user' ? messages[messageIndex - 1].text : ''; try { await supabase.from('chatbot_feedback').insert([ { message_index: messageIndex, bot_response: messages[messageIndex].text, user_query: userQuery, is_positive: isPositive, timestamp: new Date().toISOString() } ]); } catch (error) { console.error('Error saving feedback:', error); } }; // Save/load chat history useEffect(() => { const loadChatHistory = async () => { try { const savedMessages = await chatbotStore.getItem('chatHistory'); if (savedMessages && savedMessages.length) { setMessages(savedMessages); } } catch (err) { console.error('Failed to load chat history', err); } }; loadChatHistory(); }, []); useEffect(() => { if (messages.length > 1) { chatbotStore.setItem('chatHistory', messages).catch(err => { console.error('Failed to save chat history', err); }); } }, [messages]); return ( <> </> ); }; export default Chatbot;",
    "questions": [
      "Tell me about Chatbot",
      "What is on the Chatbot page",
      "Chatbot information"
    ]
  },
  {
    "route": "d:\\Kushagra\\Programming\\IRIS MIT WPU\\I.R.I.S-nextjs\\src\\components\\chatbot\\ChatbotButton",
    "content": "import React from 'react'; import { motion } from 'framer-motion'; const ChatbotButton = ({ isOpen, toggleChat, isLoading }) => { return ( {isLoading ? ( ) : isOpen ? ( ) : ( )} {!isOpen && !isLoading && ( Need help? ... )} ); }; export default ChatbotButton;",
    "questions": [
      "Tell me about ChatbotButton",
      "What is on the ChatbotButton page",
      "ChatbotButton information"
    ]
  },
  {
    "route": "d:\\Kushagra\\Programming\\IRIS MIT WPU\\I.R.I.S-nextjs\\src\\components\\chatbot\\ChatWindow",
    "content": "import React, { useState, useRef, useEffect } from 'react'; import { motion, AnimatePresence } from 'framer-motion'; const TypingIndicator = () => ( ); const ChatWindow = ({ isOpen, messages, onSendMessage, onFeedback }) => { const [input, setInput] = useState(''); const messagesEndRef = useRef(null); const handleSubmit = (e) => { e.preventDefault(); if (input.trim()) { onSendMessage(input); setInput(''); } }; const scrollToBottom = () => { messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' }); }; useEffect(() => { scrollToBottom(); }, [messages]); if (!isOpen) return null; return ( {isOpen && ( IRIS Assistant onSendMessage('exit')} className=\"text-white hover:text-gray-200\" > {messages.map((msg, index) => ( {msg.text === '...' ? ( ) : ( {msg.text} )} {msg.sender === 'bot' && msg.text !== '...' && onFeedback && ( onFeedback(index, true)} className=\"text-xs p-1 rounded text-gray-500 hover:text-green-500\" aria-label=\"Helpful\" > onFeedback(index, false)} className=\"text-xs p-1 rounded text-gray-500 hover:text-red-500\" aria-label=\"Not helpful\" > )} ))} setInput(e.target.value)} className=\"flex-1 border rounded-full px-4 py-2 focus:outline-none focus:ring-2 focus:ring-purple-500\" placeholder=\"Ask me anything...\" /> )} ); }; export default ChatWindow;",
    "questions": [
      "Tell me about ChatWindow",
      "What is on the ChatWindow page",
      "ChatWindow information"
    ]
  },
  {
    "route": "d:\\Kushagra\\Programming\\IRIS MIT WPU\\I.R.I.S-nextjs\\src\\components\\Footer",
    "content": "import React from 'react'; import Link from 'next/link'; import styles from './Footer.module.css'; function Footer() { return ( About Club Our Team Club Gallery Events Hackathons Podcasts Follow Us Instagram GitHub YouTube WhatsApp Community Policies Privacy Policy Terms & Conditions Refund Policy © 2025 I.R.I.S. All rights reserved ); } export default Footer;",
    "questions": [
      "Tell me about Footer",
      "What is on the Footer page",
      "Footer information"
    ]
  },
  {
    "route": "d:\\Kushagra\\Programming\\IRIS MIT WPU\\I.R.I.S-nextjs\\src\\components\\Header",
    "content": "import React, { useState, useEffect } from 'react'; import Link from 'next/link'; import { useRouter } from 'next/router'; import Image from 'next/image'; import styles from './Header.module.css'; function Header() { const [scrolled, setScrolled] = useState(false); const router = useRouter(); const handleNavLinkClick = () => { const navbarCollapse = document.getElementById('navbarSupportedContent'); if (navbarCollapse.classList.contains('show')) { const bsCollapse = new window.bootstrap.Collapse(navbarCollapse, { toggle: false, }); bsCollapse.hide(); } }; return ( Home Recruitments Events About Us Club Gallery Projects Blog Contact ); } export default Header;",
    "questions": [
      "Tell me about Header",
      "What is on the Header page",
      "Header information"
    ]
  },
  {
    "route": "d:\\Kushagra\\Programming\\IRIS MIT WPU\\I.R.I.S-nextjs\\src\\components\\Header2",
    "content": "import React, { useState, useEffect } from 'react'; import Link from 'next/link'; import { useRouter } from 'next/router'; import Image from 'next/image'; import styles from './Header2.module.css'; function Header2() { const [scrolled, setScrolled] = useState(false); const router = useRouter(); useEffect(() => { const handleScroll = () => { if (window.scrollY > 50) { setScrolled(true); } else { setScrolled(false); } }; window.addEventListener('scroll', handleScroll); return () => { window.removeEventListener('scroll', handleScroll); }; }, []); const handleNavLinkClick = () => { const navbarCollapse = document.getElementById('navbarSupportedContent'); if (navbarCollapse && navbarCollapse.classList.contains('show')) { const bsCollapse = bootstrap.Collapse.getInstance(navbarCollapse) || new bootstrap.Collapse(navbarCollapse, { toggle: false }); bsCollapse.hide(); } }; return ( {[ { name: 'Home', path: '/' }, { name: 'Recruitments', path: '/recruitments' }, { name: 'Events', path: '/events' }, { name: 'About Us', path: '/about' }, { name: 'Club Gallery', path: '/gallery' }, { name: 'Projects', path: '/Projects' }, { name: 'Blog', path: '/blog' }, { name: 'Contact', path: '/contact' }, ].map((item) => ( {item.name} ))} ); } export default Header2;",
    "questions": [
      "Tell me about Header2",
      "What is on the Header2 page",
      "Header2 information"
    ]
  },
  {
    "route": "d:\\Kushagra\\Programming\\IRIS MIT WPU\\I.R.I.S-nextjs\\src\\components\\Router",
    "content": "import { Routes, Route } from 'react-router-dom'; import Home from './pages/Home'; import Event from './pages/Events'; import Event1 from './pages/Event1'; import Event2 from './pages/Event2'; import About from './pages/About'; import Contact from './pages/Contact'; import Policy from './pages/policy'; import Refund from './pages/refund'; import Terms from './pages/terms'; import Blog from './pages/Blog'; //import PaymentSuccess from './pages/PaymentSuccess'; import ScrollToTop from './ScrollToTop'; import { Gallery } from './pages/Gallery'; //import CheckoutPayment from './pages/paymentCheckout'; import Projects from './pages/Projects'; import Projects1 from './pages/Projects1'; function AppRouter() { return ( <> } /> } /> } /> } /> } /> } /> } /> } /> } /> } /> } /> } /> } /> </> ); } export default AppRouter;",
    "questions": [
      "Tell me about Router",
      "What is on the Router page",
      "Router information"
    ]
  }
]